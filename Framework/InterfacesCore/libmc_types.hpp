/*++

Copyright (C) 2020 Autodesk Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of the Autodesk Inc. nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS' AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL AUTODESK INC. BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


This file has been generated by the Automatic Component Toolkit (ACT) version 1.8.0-develop.

Abstract: This is an autogenerated C++-Header file with basic types in
order to allow an easy use of Machine Control library

Interface version: 1.0.0

*/

#ifndef __LIBMC_TYPES_HEADER_CPP
#define __LIBMC_TYPES_HEADER_CPP


/*************************************************************************************************************************
 Scalar types definition
**************************************************************************************************************************/

#ifdef LIBMC_USELEGACYINTEGERTYPES

typedef unsigned char LibMC_uint8;
typedef unsigned short LibMC_uint16 ;
typedef unsigned int LibMC_uint32;
typedef unsigned long long LibMC_uint64;
typedef char LibMC_int8;
typedef short LibMC_int16;
typedef int LibMC_int32;
typedef long long LibMC_int64;

#else // LIBMC_USELEGACYINTEGERTYPES

#include <stdint.h>

typedef uint8_t LibMC_uint8;
typedef uint16_t LibMC_uint16;
typedef uint32_t LibMC_uint32;
typedef uint64_t LibMC_uint64;
typedef int8_t LibMC_int8;
typedef int16_t LibMC_int16;
typedef int32_t LibMC_int32;
typedef int64_t LibMC_int64 ;

#endif // LIBMC_USELEGACYINTEGERTYPES

typedef float LibMC_single;
typedef double LibMC_double;

/*************************************************************************************************************************
 General type definitions
**************************************************************************************************************************/

typedef LibMC_int32 LibMCResult;
typedef void * LibMCHandle;
typedef void * LibMC_pvoid;

/*************************************************************************************************************************
 Version for LibMC
**************************************************************************************************************************/

#define LIBMC_VERSION_MAJOR 1
#define LIBMC_VERSION_MINOR 0
#define LIBMC_VERSION_MICRO 0
#define LIBMC_VERSION_PRERELEASEINFO ""
#define LIBMC_VERSION_BUILDINFO ""

/*************************************************************************************************************************
 Error constants for LibMC
**************************************************************************************************************************/

#define LIBMC_SUCCESS 0
#define LIBMC_ERROR_NOTIMPLEMENTED 1 /** functionality not implemented */
#define LIBMC_ERROR_INVALIDPARAM 2 /** an invalid parameter was passed */
#define LIBMC_ERROR_INVALIDCAST 3 /** a type cast failed */
#define LIBMC_ERROR_BUFFERTOOSMALL 4 /** a provided buffer is too small */
#define LIBMC_ERROR_GENERICEXCEPTION 5 /** a generic exception occurred */
#define LIBMC_ERROR_COULDNOTLOADLIBRARY 6 /** the library could not be loaded */
#define LIBMC_ERROR_COULDNOTFINDLIBRARYEXPORT 7 /** a required exported symbol could not be found in the library */
#define LIBMC_ERROR_INCOMPATIBLEBINARYVERSION 8 /** the version of the binary interface does not match the bindings interface */
#define LIBMC_ERROR_COULDNOTPARSECONFIGURATION 9 /** could not parse configuration */
#define LIBMC_ERROR_DUPLICATESTATENAME 10 /** duplicate state name */
#define LIBMC_ERROR_STATENOTFOUND 11 /** state not found */
#define LIBMC_ERROR_DUPLICATEOUTSTATE 12 /** duplicate out state */
#define LIBMC_ERROR_MISSINGMACHINEDEFINITION 13 /** missing machine definition */
#define LIBMC_ERROR_MISSINGINSTANCENAME 14 /** missing instance name */
#define LIBMC_ERROR_DUPLICATEMACHINEINSTANCE 15 /** duplicate machine instance */
#define LIBMC_ERROR_MISSINGXMLSCHEMA 16 /** missing XML schema */
#define LIBMC_ERROR_INVALIDXMLSCHEMA 17 /** invalid XML schema */
#define LIBMC_ERROR_MISSINGSTATENAME 18 /** missing state name */
#define LIBMC_ERROR_MISSINGOUTSTATETARGET 19 /** missing outstate target */
#define LIBMC_ERROR_INVALIDOUTSTATETARGET 20 /** invalid outstate target */
#define LIBMC_ERROR_NOINITSTATE 21 /** no init state */
#define LIBMC_ERROR_NOFAILEDSTATE 22 /** no failed state */
#define LIBMC_ERROR_INITSTATENOTFOUND 23 /** init state not found */
#define LIBMC_ERROR_FAILEDSTATENOTFOUND 24 /** failed state not found */
#define LIBMC_ERROR_MISSINGINITSTATE 25 /** missing init state */
#define LIBMC_ERROR_MISSINGFAILEDSTATE 26 /** missing failed state */
#define LIBMC_ERROR_MISSINGPLUGINNAME 27 /** missing plugin name */
#define LIBMC_ERROR_EMPTYINITSTATE 28 /** empty init state */
#define LIBMC_ERROR_EMPTYFAILEDSTATE 29 /** empty failed state */
#define LIBMC_ERROR_EMPTYPLUGINNAME 30 /** empty plugin name */
#define LIBMC_ERROR_COULDNOTCREATESTATEFACTORY 31 /** could not create state factory */
#define LIBMC_ERROR_INVALIDSTATENAME 32 /** invalid state name */
#define LIBMC_ERROR_COULDNOTCREATESTATE 33 /** could not create state */
#define LIBMC_ERROR_COULDNOTINITIALIZEFACTORY 34 /** could not initialize factory */
#define LIBMC_ERROR_COULDNOTFINALIZEFACTORY 35 /** could not finalize factory */
#define LIBMC_ERROR_COULDNOTLOADPLUGIN 36 /** could not load plugin */
#define LIBMC_ERROR_NOCURRENTSTATE 37 /** no current state */
#define LIBMC_ERROR_NOPLUGINSTATE 38 /** no plugin state */
#define LIBMC_ERROR_COULDNOTEXECUTEPLUGIN 39 /** could not execute plugin */
#define LIBMC_ERROR_TOOMANYMACHINEINSTANCES 40 /** too many machine instances */
#define LIBMC_ERROR_INVALIDINDEX 41 /** invalid index */
#define LIBMC_ERROR_NOOUTSTATEGIVEN 42 /** no new outstate has been given */
#define LIBMC_ERROR_INVALIDOUTSTATEGIVEN 43 /** invalid outstate has been given */
#define LIBMC_ERROR_INVALIDREPEATDELAY 44 /** invalid repeat delay */
#define LIBMC_ERROR_INVALIDEXECUTIONDELAY 45 /** invalid execution delay */
#define LIBMC_ERROR_MISSINGREPEATDELAY 46 /** missing repeat delay */
#define LIBMC_ERROR_THREADISRUNNING 47 /** thread is running */
#define LIBMC_ERROR_THREADISNOTRUNNING 48 /** thread is not running */
#define LIBMC_ERROR_DUPLICATESIGNAL 49 /** duplicate signal */
#define LIBMC_ERROR_INVALIDSIGNALNAME 50 /** invalid signal name */
#define LIBMC_ERROR_MISSINGSIGNALNAME 51 /** missing signal name */
#define LIBMC_ERROR_MISSINGSERVERNODE 52 /** missing server node */
#define LIBMC_ERROR_MISSINGHOSTNAME 53 /** missing host name */
#define LIBMC_ERROR_MISSINGPORT 54 /** missing port */
#define LIBMC_ERROR_UUIDGENERATIONFAILED 55 /** uuid generation failed */
#define LIBMC_ERROR_INVALIDBUFFERSIZE 56 /** invalid buffer size */
#define LIBMC_ERROR_COULDNOTCONVERTTOUTF8 57 /** could not convert to utf8 */
#define LIBMC_ERROR_NOCOLUMNAVAILABLE 58 /** no column available */
#define LIBMC_ERROR_INVALIDTEXTCOLUMN 59 /** invalid text column */
#define LIBMC_ERROR_INVALIDCOLUMNTYPE 60 /** invalid column type */
#define LIBMC_ERROR_TOOMANYREQUESTEDLOGS 61 /** too many requested logs */
#define LIBMC_ERROR_MISSINGINSTANCEDESCRIPTION 62 /** missing instance description */
#define LIBMC_ERROR_DUPLICATEPARAMETERGROUPNAME 63 /** duplicate parameter group name */
#define LIBMC_ERROR_MISSINGPARAMETERGROUPNAME 64 /** missing parameter group name */
#define LIBMC_ERROR_EMPTYPARAMETERGROUPNAME 65 /** empty parameter group name */
#define LIBMC_ERROR_MISSINGPARAMETERGROUPDESCRIPTION 66 /** missing parameter group description */
#define LIBMC_ERROR_EMPTYPARAMETERGROUPDESCRIPTION 67 /** empty parameter group description */
#define LIBMC_ERROR_TOOMANYPARAMETERS 68 /** too many parameters */
#define LIBMC_ERROR_TOOMANYPARAMETERGROUPS 69 /** too many parameter groups */
#define LIBMC_ERROR_DUPLICATEPARAMETERNAME 70 /** duplicate parameter name */
#define LIBMC_ERROR_MISSINGPARAMETERNAME 71 /** missing parameter name */
#define LIBMC_ERROR_EMPTYPARAMETERNAME 72 /** empty parameter name */
#define LIBMC_ERROR_MISSINGPARAMETERDESCRIPTION 73 /** missing parameter description */
#define LIBMC_ERROR_EMPTYPARAMETERDESCRIPTION 74 /** empty parameter description */
#define LIBMC_ERROR_PARAMETERNOTFOUND 75 /** parameter not found */
#define LIBMC_ERROR_MISSINGPARAMETERDEFAULTVALUE 76 /** missing parameter default value */
#define LIBMC_ERROR_MISSINGDATACONFIGNODE 77 /** missing data config node */
#define LIBMC_ERROR_MISSINGDIRECTORY 78 /** missing directory */
#define LIBMC_ERROR_MISSINGDATABASETYPE 79 /** missing database type */
#define LIBMC_ERROR_MISSINGSQLITEINFO 80 /** missing sqlite info */
#define LIBMC_ERROR_UNKNOWNDATABASETYPE 81 /** unknown database type */
#define LIBMC_ERROR_STORAGENOTINITIALISED 82 /** storage not initialised */
#define LIBMC_ERROR_COULDNOTCONVERTTOUTF16 83 /** could not convert to utf 16 */
#define LIBMC_ERROR_COULDNOTCREATEFILE 84 /** could not create file */
#define LIBMC_ERROR_COULDNOTSEEKSTREAM 85 /** could not seek stream */
#define LIBMC_ERROR_COULDNOTGETSTREAMPOSITION 86 /** could not get stream position */
#define LIBMC_ERROR_COULDNOTWRITESTREAM 87 /** could not write stream */
#define LIBMC_ERROR_INVALIDDATABASEMIGRATION 88 /** invalid database migration */
#define LIBMC_ERROR_INTERNALERROR 89 /** internal error */
#define LIBMC_ERROR_COULDNOTSTORECONTENTSTREAM 90 /** could not store content stream */
#define LIBMC_ERROR_DATABASENOTINITIALISED 91 /** database not initialised */
#define LIBMC_ERROR_PARAMETERGROUPNOTFOUND 92 /** parameter group not found */
#define LIBMC_ERROR_SIGNALNOTFOUND 93 /** signal not found */
#define LIBMC_ERROR_STATEMACHINENOTFOUND 94 /** state machine not found. */
#define LIBMC_ERROR_MISSINGPARAMETERTYPE 95 /** missing parameter type. */
#define LIBMC_ERROR_INVALIDPARAMETERTYPE 96 /** invalid parameter type. */
#define LIBMC_ERROR_COULDNOTPARSEJSON 97 /** could not parse json. */
#define LIBMC_ERROR_INVALIDJSONFORMAT 98 /** invalid json format. */
#define LIBMC_ERROR_URLNOTFOUND 99 /** url not found. */
#define LIBMC_ERROR_GENERICBADREQUEST 100 /** generic bad request. */
#define LIBMC_ERROR_SQLITE_ERROR 101 /** SQLite: Generic Error */
#define LIBMC_ERROR_SQLITE_INTERNAL 102 /** SQLite: Internal logic error in SQLite */
#define LIBMC_ERROR_SQLITE_PERM 103 /** SQLite: Access permission denied */
#define LIBMC_ERROR_SQLITE_ABORT 104 /** SQLite: Callback routine requested an abort */
#define LIBMC_ERROR_SQLITE_BUSY 105 /** SQLite: The database file is locked */
#define LIBMC_ERROR_SQLITE_LOCKED 106 /** SQLite: A table in the database is locked */
#define LIBMC_ERROR_SQLITE_NOMEM 107 /** SQLite: A malloc failed */
#define LIBMC_ERROR_SQLITE_READONLY 108 /** SQLite: Attempt to write a readonly database */
#define LIBMC_ERROR_SQLITE_INTERRUPT 109 /** SQLite: Operation terminated by sqlite3_interrupt */
#define LIBMC_ERROR_SQLITE_IOERR 110 /** SQLite: Some kind of disk I/O error occurred */
#define LIBMC_ERROR_SQLITE_CORRUPT 111 /** SQLite: The database disk image is malformed */
#define LIBMC_ERROR_SQLITE_NOTFOUND 112 /** SQLite: Unknown opcode in sqlite3_file_control */
#define LIBMC_ERROR_SQLITE_FULL 113 /** SQLite: Insertion failed because database is full */
#define LIBMC_ERROR_SQLITE_CANTOPEN 114 /** SQLite: Unable to open the database file */
#define LIBMC_ERROR_SQLITE_PROTOCOL 115 /** SQLite: Database lock protocol error */
#define LIBMC_ERROR_SQLITE_SCHEMA 117 /** SQLite: The database schema changed */
#define LIBMC_ERROR_SQLITE_TOOBIG 118 /** SQLite: String or BLOB exceeds size limit */
#define LIBMC_ERROR_SQLITE_CONSTRAINT 119 /** SQLite: Abort due to constraint violation */
#define LIBMC_ERROR_SQLITE_MISMATCH 120 /** SQLite: Data type mismatch */
#define LIBMC_ERROR_SQLITE_MISUSE 121 /** SQLite: Library used incorrectly */
#define LIBMC_ERROR_SQLITE_NOLFS 122 /** SQLite: Uses OS features not supported on host */
#define LIBMC_ERROR_SQLITE_AUTH 123 /** SQLite: Authorization denied */
#define LIBMC_ERROR_SQLITE_RANGE 125 /** SQLite: 2nd parameter to sqlite3_bind out of range */
#define LIBMC_ERROR_SQLITE_NOTADB 126 /** SQLite: File opened that is not a database file */
#define LIBMC_ERROR_SQLITE_NOTICE 127 /** SQLite: Notifications from sqlite3_log */
#define LIBMC_ERROR_SQLITE_WARNING 128 /** SQLite: Warnings from sqlite3_log */
#define LIBMC_ERROR_SQLITE_OTHER 130 /** SQLite: Other Error */
#define LIBMC_ERROR_SQLITE_TOOMANYRESULTROWS 131 /** too many result rows */
#define LIBMC_ERROR_COULDNOTREADZIPFILE 200 /** Could not read ZIP file */
#define LIBMC_ERROR_COULDNOTOPENZIPFILE 201 /** Could not open ZIP file */
#define LIBMC_ERROR_COULDNOTGETZIPENTRIES 202 /** Could not get ZIP file entries */
#define LIBMC_ERROR_ZIPENTRYNOTFOUND 203 /** ZIP Entry not found */
#define LIBMC_ERROR_COULDNOTSTATZIPENTRY 204 /** Could not stat ZIP entry */
#define LIBMC_ERROR_COULDNOTOPENZIPENTRY 205 /** Could not open ZIP entry */
#define LIBMC_ERROR_COULDNOTREADZIPSTREAM 206 /** Could not read ZIP stream */
#define LIBMC_ERROR_COULDNOTREADFULLZIPDATA 207 /** Could not read full zip data */
#define LIBMC_ERROR_COULDNOTFINDRESOURCEINDEX 208 /** Could not find resource index. */
#define LIBMC_ERROR_COULDNOTPARSERESOURCEINDEX 209 /** Could not parse resource index. */
#define LIBMC_ERROR_EMPTYRESOURCEINDEX 210 /** Empty resource index. */
#define LIBMC_ERROR_MISSINGRESOURCEINDEX 211 /** Missing resource index. */
#define LIBMC_ERROR_MISSINGRESOURCENAME 212 /** Missing resource name. */
#define LIBMC_ERROR_MISSINGRESOURCEFILENAME 213 /** Missing resource filename. */
#define LIBMC_ERROR_MISSINGRESOURCESIZE 214 /** Missing resource size. */
#define LIBMC_ERROR_MISSINGRESOURCECONTENTTYPE 215 /** Missing resource content type. */
#define LIBMC_ERROR_DRIVERALREADYREGISTERED 216 /** Driver already registered. */
#define LIBMC_ERROR_DRIVERNOTFOUND 217 /** Driver not found. */
#define LIBMC_ERROR_MISSINGDRIVERNAME 218 /** Missing driver name. */
#define LIBMC_ERROR_MISSINGDRIVERTYPE 219 /** Missing driver type. */
#define LIBMC_ERROR_MISSINGDRIVERLIBRARY 220 /** Missing driver library. */
#define LIBMC_ERROR_DRIVERALREADYRESERVED 221 /** Driver has already been reserved by an instance. */
#define LIBMC_ERROR_LIBRARYPATHNOTFOUND 222 /** Library path not found. */
#define LIBMC_ERROR_TOOLPATHENTITYNOTLOADED 223 /** Toolpath entity not loaded */
#define LIBMC_ERROR_TOOLPATHENTITYREFERENCEERROR 224 /** Toolpath entity reference error */
#define LIBMC_ERROR_TOOLPATHENTITYINVALIDFILE 225 /** Toolpath entity is invalid */
#define LIBMC_ERROR_NO3MFLIBRARY 226 /** No 3MF Library specified */
#define LIBMC_ERROR_INVALIDPOINTCOUNT 227 /** Invalid point count */
#define LIBMC_ERROR_DUPLICATEJOBUUID 228 /** Duplicate job uuid */
#define LIBMC_ERROR_INVALIDJOBSTATUS 229 /** Invalid job status */
#define LIBMC_ERROR_INVALIDSTREAMCONTEXT 230 /** Invalid stream context */
#define LIBMC_ERROR_JOBUUIDNOTFOUND 231 /** Job uuid not found */
#define LIBMC_ERROR_INVALIDJOBNAME 232 /** Invalid job name */
#define LIBMC_ERROR_INVALIDJOBTIMESTAMP 233 /** Invalid job timestamp */
#define LIBMC_ERROR_INVALIDUSERID 234 /** Invalid job name */
#define LIBMC_ERROR_INVALIDSTORAGECALLBACKSIGNATURE 235 /** Invalid storage callback signature */
#define LIBMC_ERROR_INVALIDSTORAGECALLBACKSTREAM 236 /** Invalid storage callback stream */
#define LIBMC_ERROR_INVALIDSTORAGEPATH 237 /** Invalid storage path */
#define LIBMC_ERROR_STORAGESTREAMNOTFOUND 238 /** Storage Stream not found */
#define LIBMC_ERROR_DUPLICATESTORAGESTREAM 239 /** Duplicate Storage Stream */
#define LIBMC_ERROR_INVALIDPARTIALUPLOAD 240 /** Invalid Partial Upload */
#define LIBMC_ERROR_PARTIALUPLOADNOTFINISHED 241 /** Partial Upload not finished */
#define LIBMC_ERROR_APIREQUESTNOTHANDLED 242 /** API Request not handled */
#define LIBMC_ERROR_APIREQUESTALREADYHANDLED 243 /** API Request already handled */
#define LIBMC_ERROR_INVALIDAPIREQUESTTYPE 244 /** Invalid API Request type */
#define LIBMC_ERROR_INVALIDUPLOADSTREAM 245 /** Invalid Upload Stream */
#define LIBMC_ERROR_COULDNOTPARSEJSONREQUEST 246 /** Could not parse JSON request */
#define LIBMC_ERROR_INVALIDCONTEXTUUID 247 /** Invalid Context UUID */
#define LIBMC_ERROR_INVALIDUPLOADNAME 248 /** Invalid Upload Name */
#define LIBMC_ERROR_INVALIDMIMETYPE 249 /** Invalid Mime Type */
#define LIBMC_ERROR_INVALIDSTREAMSIZE 250 /** Invalid Stream Size */
#define LIBMC_ERROR_INVALIDSHA256SUM 251 /** Invalid SHA256 Sum */
#define LIBMC_ERROR_INVALIDSTREAMUUID 252 /** Invalid Stream UUID */
#define LIBMC_ERROR_INVALIDFIELDNAME 253 /** Invalid field name */
#define LIBMC_ERROR_UPLOADSIZEMISMATCH 254 /** Upload size mismatch */
#define LIBMC_ERROR_CONTENTTYPENOTACCEPTED 255 /** Content type not accepted */
#define LIBMC_ERROR_NOCURRENTUPLOAD 256 /** No current upload */
#define LIBMC_ERROR_UPLOADCHECKSUMMISMATCH 257 /** Upload checksum mismatch */
#define LIBMC_ERROR_INVALIDSTORAGESTREAMSTATUS 258 /** Invalid storage stream status */
#define LIBMC_ERROR_CONTEXTUUIDNOTACCEPTED 259 /** Context uuid not accepted */
#define LIBMC_ERROR_INVALIDBUILDUUID 260 /** Invalid build uuid */
#define LIBMC_ERROR_MISSINGTHREADCOUNT 261 /** Missing thread count */
#define LIBMC_ERROR_INVALIDTHREADCOUNT 262 /** Invalid thread count */
#define LIBMC_ERROR_COULDNOTUPDATEBUILDSTATUS 263 /** Could not update build status */
#define LIBMC_ERROR_INVALIDITERATOR 264 /** Invalid iterator */
#define LIBMC_ERROR_INVALIDDATATYPE 265 /** Invalid data type */
#define LIBMC_ERROR_COULDNOTSENDSIGNAL 266 /** Could not send signal */
#define LIBMC_ERROR_MISSINGSIGNALPARAMETER 267 /** Missing signal parameter */
#define LIBMC_ERROR_NOUSERINTERFACEDEFINITION 268 /** No user interface definition */
#define LIBMC_ERROR_MISSINGAPPNAME 269 /** Missing app name */
#define LIBMC_ERROR_MISSINGCOPYRIGHT 270 /** Missing copyright */
#define LIBMC_ERROR_MISSINGMAINPAGE 271 /** Missing main page */
#define LIBMC_ERROR_MISSINGMENUITEMID 272 /** Missing menu item id */
#define LIBMC_ERROR_MISSINGMENUITEMICON 273 /** Missing menu item icon */
#define LIBMC_ERROR_MISSINGMENUITEMCAPTION 274 /** Missing menu item caption */
#define LIBMC_ERROR_MISSINGTARGETPAGE 275 /** Missing menu item target page */
#define LIBMC_ERROR_MISSINGMENUNODE 276 /** Missing menu node */
#define LIBMC_ERROR_MISSINGTOOLBARNODE 277 /** Missing toolbar node */
#define LIBMC_ERROR_MISSINGTOOLBARITEMID 278 /** Missing toolbar item id */
#define LIBMC_ERROR_MISSINGTOOLBARITEMICON 279 /** Missing toolbar item icon */
#define LIBMC_ERROR_MISSINGTOOLBARITEMCAPTION 280 /** Missing toolbar item caption */
#define LIBMC_ERROR_MISSINGSERVICESNODE 281 /** Missing services node */
#define LIBMC_ERROR_INVALIDSESSIONUUID 282 /** Invalid session UUID */
#define LIBMC_ERROR_INVALIDSESSIONKEY 283 /** Invalid session Key */
#define LIBMC_ERROR_SESSIONNOTAUTHORIZED 284 /** Session not authorized */
#define LIBMC_ERROR_INVALIDUSERNAME 285 /** Invalid user name */
#define LIBMC_ERROR_INVALIDPASSWORD 286 /** Invalid password */
#define LIBMC_ERROR_INVALIDAUTHORIZATION 287 /** Invalid Authorization */
#define LIBMC_ERROR_USERALREADYAUTHORIZED 288 /** User already authorized */
#define LIBMC_ERROR_INVALIDSESSIONTOKEN 289 /** Invalid session token */
#define LIBMC_ERROR_INVALIDCLIENTKEY 290 /** Invalid client key */
#define LIBMC_ERROR_INVALIDLOGIN 291 /** Invalid login credentials */
#define LIBMC_ERROR_DUPLICATEPAGE 292 /** Duplicate page */
#define LIBMC_ERROR_PAGENOTFOUND 293 /** Page not found */
#define LIBMC_ERROR_MISSINGPAGENAME 294 /** Missing page name */
#define LIBMC_ERROR_INVALIDPAGENAME 295 /** Invalid page name */
#define LIBMC_ERROR_MODULENOTFOUND 296 /** Module not found */
#define LIBMC_ERROR_DUPLICATEMODULE 297 /** Duplicate module */
#define LIBMC_ERROR_INVALIDMODULENAME 298 /** Invalid module name */
#define LIBMC_ERROR_INVALIDMODULETYPE 299 /** Invalid module type */
#define LIBMC_ERROR_INVALIDHEADLINE 300 /** Invalid headline */
#define LIBMC_ERROR_USERNOTFOUND 301 /** User not found */
#define LIBMC_ERROR_STREAMISNOTIMAGE 302 /** Stream is not image */
#define LIBMC_ERROR_TOOMANYCONTENTPARAMETERS 303 /** Too many content parameters */
#define LIBMC_ERROR_MISSINGCONTENTSTATEMACHINENAME 304 /** Missing content state machine name */
#define LIBMC_ERROR_MISSINGCONTENTGROUPNAME 305 /** Missing content group name */
#define LIBMC_ERROR_INVALIDENTRIESPERPAGE 306 /** Invalid entries per page */
#define LIBMC_ERROR_MODULEITEMNOTFOUND 307 /** Module item not found */
#define LIBMC_ERROR_DERIVEDPARAMETERSREADONLY 308 /** Derived parameters are read only. */
#define LIBMC_ERROR_TOOMANYJOURNALVARIABLES 309 /** Too many journal variables */
#define LIBMC_ERROR_JOURNALISNOTINITIALISING 310 /** Too many journal variables */
#define LIBMC_ERROR_JOURNALISNOTRECORDING 311 /** Journal is not recording. */
#define LIBMC_ERROR_INVALIDVARIABLETYPE 312 /** Invalid variable type */
#define LIBMC_ERROR_INVALIDVARIABLEUNITS 313 /** Invalid variable units */
#define LIBMC_ERROR_UNITSHAVEALREADYBEENSET 314 /** Units have already been set */
#define LIBMC_ERROR_UNITSHAVENOTBEENSET 315 /** Units have not been set */
#define LIBMC_ERROR_INVALIDTIMESTAMP 316 /** Invalid time stamp */
#define LIBMC_ERROR_NOCURRENTJOURNALCHUNK 317 /** No current journal chunk */
#define LIBMC_ERROR_DUPLICATEJOURNALID 318 /** Duplicate journal id */
#define LIBMC_ERROR_RESOURCEENTRYNOTFOUND 319 /** Resource entry not found */
#define LIBMC_ERROR_NOCORERESOURCEPACKAGE 320 /** No core resource package */
#define LIBMC_ERROR_INVALIDASPECTRATIO 321 /** Invalid aspect ratio */
#define LIBMC_ERROR_MISSINGLOGORESOURCE 322 /** Missing logo resource */
#define LIBMC_ERROR_NOUSERINTERFACEPLUGIN 323 /** No user interface plugin */
#define LIBMC_ERROR_COULDNOTLOADUILIBRARY 324 /** Could not load UI library */
#define LIBMC_ERROR_EVENTNAMENOTFOUND 325 /** Event name not found */
#define LIBMC_ERROR_INVALIDEVENTSENDER 326 /** Invalid event context */
#define LIBMC_ERROR_INVALIDEVENTCONTEXT 327 /** Invalid event sender */
#define LIBMC_ERROR_INVALIDLAYERINDEX 328 /** Invalid layer index */
#define LIBMC_ERROR_TEMPBASEPATHEMPTY 329 /** Empty base path for temporary files */
#define LIBMC_ERROR_PROFILENOTFOUND 330 /** Profile not found. */
#define LIBMC_ERROR_INVALIDSERVICEHANDLER 331 /** Invalid service handler. */
#define LIBMC_ERROR_INVALIDMAXTHREADCOUNT 332 /** Invalid max thread count. */
#define LIBMC_ERROR_INVALIDTOOLPATHSTREAMUUID 333 /** Invalid toolpath stream uuid */
#define LIBMC_ERROR_MISSINGSECTIONHEIGHT 334 /** Missing section height */
#define LIBMC_ERROR_INVALIDSECTIONHEIGHT 335 /** Invalid section height */
#define LIBMC_ERROR_MISSINGSECTIONWIDTH 336 /** Missing section width */
#define LIBMC_ERROR_INVALIDSECTIONWIDTH 337 /** Invalid section width */
#define LIBMC_ERROR_TOOLPATHMETADATANOTFOUND 338 /** Toolpath metadata not found */
#define LIBMC_ERROR_BUILDITEMHASNOUUID 339 /** Build item has no uuid */
#define LIBMC_ERROR_OBJECTHASNOUUID 340 /** Object has no uuid */
#define LIBMC_ERROR_COULDNOTPARSEEVENTPARAMETERS 341 /** Could not parse event parameters */
#define LIBMC_ERROR_INVALIDEVENTPARAMETERS 342 /** Invalid event parameters */
#define LIBMC_ERROR_INVALIDFORMVALUES 343 /** Invalid form values */
#define LIBMC_ERROR_FORMNAMEMISSING 344 /** Form name is missing */
#define LIBMC_ERROR_FORMENTITYNAMEMISSING 345 /** Form entity name is missing */
#define LIBMC_ERROR_FORMNOTFOUND 346 /** Form not found */
#define LIBMC_ERROR_FORMENTITYNOTFOUND 347 /** Form entity not found */
#define LIBMC_ERROR_DUPLICATEENTITYNAME 348 /** Duplicate form entity name */
#define LIBMC_ERROR_COULDNOTFINDEVENTSENDERPAGE 349 /** Could not find event sender page */
#define LIBMC_ERROR_COULDNOTFINDEVENTSENDER 350 /** Could not find event sender */
#define LIBMC_ERROR_DUPLICATEFORMNAME 351 /** Duplicate form name */
#define LIBMC_ERROR_EVENTNOTFOUND 352 /** Event not found */
#define LIBMC_ERROR_MISSINGCOLORNAME 353 /** Missing color name */
#define LIBMC_ERROR_MISSINGCOLORREDCHANNEL 354 /** Missing red color channel */
#define LIBMC_ERROR_MISSINGCOLORGREENCHANNEL 355 /** Missing green color channel */
#define LIBMC_ERROR_MISSINGCOLORBLUECHANNEL 356 /** Missing blue color channel */
#define LIBMC_ERROR_INVALIDCOLORREDCHANNEL 357 /** Invalid red color channel */
#define LIBMC_ERROR_INVALIDCOLORGREENCHANNEL 358 /** Invalid green color channel */
#define LIBMC_ERROR_INVALIDCOLORBLUECHANNEL 359 /** Invalid blue color channel */
#define LIBMC_ERROR_MISSINGCOLUMNWIDTH 360 /** Missing column width */
#define LIBMC_ERROR_INVALIDCOLUMNWIDTH 361 /** Invalid column width */
#define LIBMC_ERROR_MISSINGCOLUMNUNIT 362 /** Missing column unit */
#define LIBMC_ERROR_MISSINGROWHEIGHT 363 /** Missing row height */
#define LIBMC_ERROR_INVALIDROWHEIGHT 364 /** Invalid row height */
#define LIBMC_ERROR_MISSINGROWUNIT 365 /** Missing row unit */
#define LIBMC_ERROR_MISSINGCOLUMNSTARTATTRIB 366 /** Missing column start attrib */
#define LIBMC_ERROR_MISSINGCOLUMNENDATTRIB 367 /** Missing column end attrib */
#define LIBMC_ERROR_MISSINGROWSTARTATTRIB 368 /** Missing row start attrib */
#define LIBMC_ERROR_MISSINGROWENDATTRIB 369 /** Missing row end attrib */
#define LIBMC_ERROR_INVALIDCOLUMNSTARTATTRIB 370 /** Invalid column start attrib */
#define LIBMC_ERROR_INVALIDCOLUMNENDATTRIB 371 /** Invalid column end attrib */
#define LIBMC_ERROR_INVALIDROWSTARTATTRIB 372 /** Invalid row start attrib */
#define LIBMC_ERROR_INVALIDROWENDATTRIB 373 /** Invalid row end attrib */
#define LIBMC_ERROR_INVALIDPARAMETERPATH 374 /** Invalid parameter path */
#define LIBMC_ERROR_INVALIDPARAMETERINSTANCE 375 /** Invalid parameter instance */
#define LIBMC_ERROR_INVALIDPARAMETERGROUP 376 /** Invalid parameter group */
#define LIBMC_ERROR_INVALIDPARAMETERNAME 377 /** Invalid parameter name */
#define LIBMC_ERROR_INVALIDSTATEMACHINENAME 378 /** Invalid state machine name */
#define LIBMC_ERROR_INVALIDGRIDPOSITION 379 /** Invalid grid position */
#define LIBMC_ERROR_INVALIDDIALOGNAME 380 /** Invalid dialog name */
#define LIBMC_ERROR_DUPLICATEDIALOG 381 /** Duplicate dialog */
#define LIBMC_ERROR_DIALOGNOTFOUND 382 /** Dialog not found */
#define LIBMC_ERROR_COULDNOTHANDLEEVENT 383 /** Could not handle event */
#define LIBMC_ERROR_INVALIDFORMPATH 384 /** Invalid form path */
#define LIBMC_ERROR_MISSINGITEMNAME 385 /** Missing item name */
#define LIBMC_ERROR_INVALIDITEMPATH 386 /** Invalid item path */
#define LIBMC_ERROR_INVALIDMODULEPATH 387 /** Invalid module path */
#define LIBMC_ERROR_BUILDLISTNAMEMISSING 388 /** Build list name missing */
#define LIBMC_ERROR_EMPTYITEMPREFIX 389 /** Empty item prefix */
#define LIBMC_ERROR_INVALIDITEMPREFIX 390 /** Invalid item prefix */
#define LIBMC_ERROR_EMPTYITEMNAME 391 /** Empty item name */
#define LIBMC_ERROR_EXPRESSIONVALUEGIVENTWICE 392 /** Expression value is given twice */
#define LIBMC_ERROR_INVALIDINTEGEREXPRESSION 393 /** Invalid integer expression */
#define LIBMC_ERROR_INVALIDNUMBEREXPRESSION 394 /** Invalid number expression */
#define LIBMC_ERROR_INVALIDBOOLEANEXPRESSION 395 /** Invalid boolean expression */
#define LIBMC_ERROR_INVALIDPERSISTENCYNAME 396 /** Invalid persistency name */
#define LIBMC_ERROR_ONLYVALUEDPARAMETERSCANBEPERSISTENT 397 /** Only valued parameters can be persistent */
#define LIBMC_ERROR_PLATFORMINFORMATIONMISSING 398 /** Platform information missing */
#define LIBMC_ERROR_INVALIDBUTTONDISTRIBUTION 399 /** Invalid button distribution */
#define LIBMC_ERROR_EXPRESSIONVALUEMISSING 400 /** Expression value missing */
#define LIBMC_ERROR_INVALIDVIEWPORTCOORD 401 /** Invalid viewport coordinate */
#define LIBMC_ERROR_VIEWPORTCOORDMISSING 402 /** Viewport coordinate missing */
#define LIBMC_ERROR_MACHINEINSTANCENOTFOUND 403 /** Machine instance not found */
#define LIBMC_ERROR_COULDNOTGETTEMPPATHFROMWINDOWS 404 /** Could not get temp path from Windows */
#define LIBMC_ERROR_DUPLICATEBUTTONNAME 405 /** Duplicate button name */
#define LIBMC_ERROR_SERVERCONFIGURATIONNOTLOADED 406 /** Server configuration not loaded */
#define LIBMC_ERROR_COULDNOTPARSESERVERCONFIGURATION 407 /** Could not pars server configuration */
#define LIBMC_ERROR_MISSINGSERVERCONFIGURATIONNODE 408 /** Missing server configuration node */
#define LIBMC_ERROR_COULDNOTFINDLIBRARYENTRY 409 /** Could not find library entry */
#define LIBMC_ERROR_INVALIDPORT 410 /** Invalid port */
#define LIBMC_ERROR_MISSINGDATANODE 411 /** Missing data node */
#define LIBMC_ERROR_MISSINGDATADIRECTORY 412 /** Missing data directory */
#define LIBMC_ERROR_DATADIRECTORYDOESNOTEXISTS 413 /** Data directory does not exist: */
#define LIBMC_ERROR_INVALIDDATADIRECTORY 414 /** Invalid data directory */
#define LIBMC_ERROR_INVALIDSQLITEDBPATH 415 /** Missing SQLite DB Path */
#define LIBMC_ERROR_INVALIDDATABASETYPE 416 /** Invalid database type */
#define LIBMC_ERROR_DEFAULTPACKAGEMISSING 417 /** Default package missing */
#define LIBMC_ERROR_DEFAULTPACKAGENAMEMISSING 418 /** Default package name missing */
#define LIBMC_ERROR_COULDNOTPARSEPACKAGEXML 419 /** Could not parse package xml */
#define LIBMC_ERROR_MISSINGPACKAGENODE 420 /** Missing package node */
#define LIBMC_ERROR_MISSINGBUILDNODE 421 /** Missing build node */
#define LIBMC_ERROR_MISSINGBUILDNAME 422 /** Missing build name */
#define LIBMC_ERROR_MISSINGCONFIGURATIONNAME 423 /** Missing configuration name */
#define LIBMC_ERROR_MISSINGCORECLIENT 424 /** Missing core client */
#define LIBMC_ERROR_MISSINGLIBRARYNAME 425 /** Missing library name */
#define LIBMC_ERROR_MISSINGLIBRARYIMPORTNAME 426 /** Missing library import name */
#define LIBMC_ERROR_DUPLICATELIBRARYNAME 427 /** Duplicate library name */
#define LIBMC_ERROR_INVALIDTRANSFORMINTERVAL 428 /** Invalid transform interval */
#define LIBMC_ERROR_INVALIDTRANSFORMCOORDINATE 429 /** Invalid transform coordinate */
#define LIBMC_ERROR_SUCCESSSTATENOTFOUND 430 /** success state not found */
#define LIBMC_ERROR_DUPLICATESERVERPRIVATEKEY 431 /** duplicate server private key */
#define LIBMC_ERROR_DUPLICATESERVERCERTIFICATE 432 /** duplicate server certificate */
#define LIBMC_ERROR_INVALIDGITHASH 433 /** Invalid git hash */
#define LIBMC_ERROR_COULDNOTPARSETESTDEFINITION 434 /** Could not parse test definition. */
#define LIBMC_ERROR_MISSINGTESTDEFINITIONNODE 435 /** Missing test definition node. */
#define LIBMC_ERROR_AMBIGIOUSMAINNODE 436 /** Ambigious main node */
#define LIBMC_ERROR_MISSINGMAINNODE 437 /** Missing main node */
#define LIBMC_ERROR_MISSINGLIBRARIESNODE 438 /** Missing libraries node */
#define LIBMC_ERROR_MISSINGLIBRARYDLLFILENAME 439 /** Missing library dll filename */
#define LIBMC_ERROR_MISSINGTESTDESCRIPTION 440 /** Missing test description */
#define LIBMC_ERROR_MISSINGTESTINSTANCENAME 441 /** Missing test instance name */
#define LIBMC_ERROR_TESTDEFINITIONHASNOINSTANCES 442 /** Test definition has no instances */
#define LIBMC_ERROR_INVALIDPACKAGEENTRYNAME 443 /** Invalid package entry name */
#define LIBMC_ERROR_INVALIDPACKAGEENTRYEXTENSION 444 /** Invalid package entry name */
#define LIBMC_ERROR_INVALIDPACKAGEENTRYFILENAME 445 /** Invalid package entry file name */
#define LIBMC_ERROR_INVALIDEXPRESSIONVALUE 446 /** Invalid expression value */
#define LIBMC_ERROR_INVALIDBUTTONNAME 447 /** Invalid button name */
#define LIBMC_ERROR_RESOURCEENTRYISNOUTF8STRING 448 /** Resource entry is no UTF8 string */
#define LIBMC_ERROR_AMBIGUOUSDRIVERCONFIGURATION 449 /** Ambiguous driver configuration */
#define LIBMC_ERROR_COULDNOTCREATEDRIVER 450 /** Could not create driver */
#define LIBMC_ERROR_EMPTYGROUPNAMEBUTPARAMETERGIVEN 451 /** Empty group name but parameter given */
#define LIBMC_ERROR_INVALIDDEFAULTXMLNAMESPACE 452 /** invalid default xml namespace name. */
#define LIBMC_ERROR_INVALIDXMLROOTNODENAME 453 /** invalid xml root node name. */
#define LIBMC_ERROR_COULDNOTPARSEXMLSTRING 454 /** could not parse XML String. */
#define LIBMC_ERROR_COULDNOTPARSEXMLDATA 455 /** could not parse XML Data. */
#define LIBMC_ERROR_XMLDOESNOTCONTAINROOTNODE 456 /** XML does not contain root node. */
#define LIBMC_ERROR_XMLCONTAINSAMBIGOUSROOTNODES 457 /** XML contains ambiguous root nodes. */
#define LIBMC_ERROR_XMLDOESNOTCONTAINNAMESPACE 458 /** XML does not contain namespace. */
#define LIBMC_ERROR_INVALIDXMLDATA 459 /** invalid XML Data. */
#define LIBMC_ERROR_INVALIDXMLROOTNODEINSTANCE 460 /** invalid XML root node instance. */
#define LIBMC_ERROR_XMLNAMESPACEPREFIXALREADYREGISTERED 461 /** XML namespace prefix already registered. */
#define LIBMC_ERROR_XMLNAMESPACEALREADYREGISTERED 462 /** XML namespace already registered. */
#define LIBMC_ERROR_XMLNAMESPACENOTFOUND 463 /** XML namespace not found. */
#define LIBMC_ERROR_INVALIDNAMESPACENAME 464 /** Invalid namespace name. */
#define LIBMC_ERROR_INVALIDNAMESPACEPREFIX 465 /** Invalid namespace prefix. */
#define LIBMC_ERROR_INVALIDNAMESPACEINDEX 466 /** Invalid namespace index. */
#define LIBMC_ERROR_INVALIDATTRIBUTEINDEX 467 /** Invalid attribute index. */
#define LIBMC_ERROR_PROFILEVALUENOTFOUND 468 /** Profile value not found. */
#define LIBMC_ERROR_INVALIDXMLNODENAME 469 /** Invalid xml node name. */
#define LIBMC_ERROR_INVALIDXMLNAMESPACE 470 /** Invalid xml namespace. */
#define LIBMC_ERROR_COULDNOTFINDATTRIBUTE 471 /** Could not find attribute. */
#define LIBMC_ERROR_DUPLICATEATTRIBUTE 472 /** Duplicate attribute. */
#define LIBMC_ERROR_INTERNALATTRIBUTEERROR 473 /** Internal attribute error. */
#define LIBMC_ERROR_XMLNODECHILDNOTFOUND 474 /** XML node child not found. */
#define LIBMC_ERROR_INVALIDXMLNODEINDEX 475 /** Invalid XML Node index. */
#define LIBMC_ERROR_INTERNALNODEERROR 476 /** Internal node error. */
#define LIBMC_ERROR_XMLNODENOTFOUNDINLIST 477 /** XML node not found in list. */
#define LIBMC_ERROR_COULDNOTFINDXMLNAMESPACE 478 /** Could not find XML Namespace */
#define LIBMC_ERROR_INVALIDCOMPONENTNAME 489 /** invalid component name. */
#define LIBMC_ERROR_MISSINGCOMPONENTNAME 490 /** missing component name. */
#define LIBMC_ERROR_CUSTOMPAGEPROPERTYNAMEMISSING 491 /** custom page property name missing. */
#define LIBMC_ERROR_CUSTOMPAGEPROPERTYTYPEMISSING 492 /** custom page property type missing. */
#define LIBMC_ERROR_EMTPYEVENTNAME 493 /** empty event name. */
#define LIBMC_ERROR_INVALIDEVENTNAME 494 /** invalid event name. */
#define LIBMC_ERROR_INVALIDEVENTPATH 495 /** invalid event path. */
#define LIBMC_ERROR_CUSTOMPAGEVENTNAMEMISSING 496 /** custom page event name missing. */
#define LIBMC_ERROR_INVALIDCUSTOMPAGEVENTNAME 497 /** invalid custom page event name. */
#define LIBMC_ERROR_DUPLICATECUSTOMPAGEVENTNAME 498 /** duplicate custom page event name. */
#define LIBMC_ERROR_INVALIDEVENTPARAMETERNAME 499 /** invalid event parameter name. */
#define LIBMC_ERROR_INVALIDMETADATAINDEX 500 /** invalid metadata index. */
#define LIBMC_ERROR_METADATAISNOTUNIQUE 501 /** metadata is not unique. */
#define LIBMC_ERROR_METADATANOTFOUND 502 /** metadata not found. */
#define LIBMC_ERROR_TIMESTAMPISNOTINCREMENTING 503 /** Time stamp is not incrementing. */
#define LIBMC_ERROR_INVALIDTIMESTAMPINTERVAL 504 /** Invalid time stamp interval. */
#define LIBMC_ERROR_TIMESTREAMISEMPTY 505 /** Time stream is empty. */
#define LIBMC_ERROR_INVALIDTOOLPATHATTRIBUTETYPE 506 /** Invalid toolpath attribute type. */
#define LIBMC_ERROR_INVALIDSEGMENTINDEX 507 /** Invalid segment index. */
#define LIBMC_ERROR_INVALIDTOOLPATHATTRIBUTEID 508 /** Invalid toolpath attribute ID. */
#define LIBMC_ERROR_AMBIGUOUSSEGMENTATTRIBUTETYPE 509 /** Ambiguous segment attribute type. */
#define LIBMC_ERROR_XMLNODEHASCHILDREN 510 /** XML Node has children */
#define LIBMC_ERROR_XMLNODEHASTEXTCONTENT 511 /** XML Node has text content */
#define LIBMC_ERROR_STRINGHANDLERNOTAVAILABLE 512 /** String handler not available */
#define LIBMC_ERROR_DUPLICATEROLEPERMISSION 513 /** Duplicate role permission */
#define LIBMC_ERROR_EMPTYACCESSROLEIDENTIFIER 514 /** Empty access role identifier */
#define LIBMC_ERROR_INVALIDACCESSROLEIDENTIFIER 515 /** Invalid access role identifier */
#define LIBMC_ERROR_EMPTYACCESSROLEDISPLAYNAME 516 /** Empty access role display name */
#define LIBMC_ERROR_EMPTYACCESSPERMISSIONIDENTIFIER 517 /** Empty access permission identifier */
#define LIBMC_ERROR_INVALIDACCESSPERMISSIONIDENTIFIER 518 /** Invalid access permission identifier */
#define LIBMC_ERROR_EMPTYACCESSPERMISSIONDISPLAYNAME 519 /** Empty access permission display name */
#define LIBMC_ERROR_EMPTYSTRINGRESOURCENAME 520 /** Empty string resource name */
#define LIBMC_ERROR_DUPLICATESTRINGRESOURCENAME 521 /** Duplicate string resource name */
#define LIBMC_ERROR_INVALIDSTRINGRESOURCENAMEIDENTIFIER 522 /** Invalid string resource name identifier */
#define LIBMC_ERROR_STRINGRESOURCENOTFOUND 523 /** String resource not found */
#define LIBMC_ERROR_LANGUAGEIDNOTFOUND 524 /** Language ID not found */
#define LIBMC_ERROR_DUPLICATEPERMISSIONIDENTIFIER 525 /** Duplicate Permission Identifier */
#define LIBMC_ERROR_DUPLICATEROLEIDENTIFIER 526 /** Duplicate Role Identifier */
#define LIBMC_ERROR_PERMISSIONNOTFOUND 527 /** Permission not found */
#define LIBMC_ERROR_ROLENOTFOUND 528 /** Role not found */
#define LIBMC_ERROR_MISSINGACCESSCONTROLPERMISSIONS 529 /** Missing access control permissions */
#define LIBMC_ERROR_MISSINGACCESSCONTROLROLES 530 /** Missing access control roles */
#define LIBMC_ERROR_MISSINGACCESSCONTROLROLEPERMISSIONS 531 /** Missing access control role permissions */
#define LIBMC_ERROR_MISSINGROLEPERMISSIONIDENTIFIER 532 /** Missing role permission identifier */
#define LIBMC_ERROR_INVALIDDISCRETEFIELDBUFFER 533 /** Invalid discrete field buffer */
#define LIBMC_ERROR_INVALIDDISCRETEFIELDFILESIGN 534 /** Invalid discrete field file sign */
#define LIBMC_ERROR_INCOMPATIBLEDISCRETEFIELDFILEVERSION 535 /** Incompatible discrete field file version */
#define LIBMC_ERROR_TOONEWDISCRETEFIELDFILEVERSION 536 /** Too new discrete field file version */
#define LIBMC_ERROR_TOONEWDISCRETEFIELDSTREAMTYPE 537 /** Too new discrete field stream type */
#define LIBMC_ERROR_INVALIDDISCRETEFIELDDATAOFFSET 538 /** Invalid discrete field data offset */
#define LIBMC_ERROR_INVALIDDISCRETEFIELDSTREAMSIZE 539 /** Invalid discrete field stream size */
#define LIBMC_ERROR_INVALIDDISCRETEFIELDINTERNALDATA 540 /** Invalid discrete field internal data */
#define LIBMC_ERROR_DEFAULTROLEHASNOTBEENSET 541 /** Default role has not been set */
#define LIBMC_ERROR_EMPTYROLEIDENTIFIER 542 /** Empty role identifier */
#define LIBMC_ERROR_EMPTYPERMISSIONIDENTIFIER 543 /** Empty permission identifier */
#define LIBMC_ERROR_USERHASUNKNOWNROLE 544 /** User has unknown role */
#define LIBMC_ERROR_MISSINGDEFAULTACCESSROLE 545 /** Missing default access role */
#define LIBMC_ERROR_FIXEDFLOATBUFFEROVERRUN 546 /** Fixed float buffer overrun */
#define LIBMC_ERROR_MESHENTITYNOTLOADED 547 /** Mesh entity not loaded */
#define LIBMC_ERROR_MESHENTITYALREADYLOADED 548 /** Mesh entity already loaded */
#define LIBMC_ERROR_INVALIDMESHFACEID 549 /** Invalid face ID */
#define LIBMC_ERROR_MESH3MFRESOURCEISEMPTY 550 /** Mesh 3MF resource is empty */
#define LIBMC_ERROR_INVALIDMESHEDGEID 551 /** Invalid edge ID */
#define LIBMC_ERROR_INVALIDMESHNODEID 552 /** Invalid node ID */
#define LIBMC_ERROR_INVALIDGLSCENEMODELNAME 553 /** Invalid GL scene model name */
#define LIBMC_ERROR_INVALIDGLSCENEINSTANCENAME 554 /** Invalid GL scene instance name */
#define LIBMC_ERROR_EMPTYGLMODELNAME 555 /** Empty GL model name */
#define LIBMC_ERROR_INVALIDGLMODELNAME 556 /** Invalid GL model name */
#define LIBMC_ERROR_DUPLICATEGLMODELNAME 557 /** Duplicate GL model name */
#define LIBMC_ERROR_MODELGLRESOURCENOTFOUND 558 /** Model GL Resource not found */
#define LIBMC_ERROR_EMPTYGLINSTANCENAME 559 /** Empty GL instance name */
#define LIBMC_ERROR_INVALIDGLINSTANCENAME 560 /** Invalid GL instance name */
#define LIBMC_ERROR_EMPTYGLINSTANCEMODEL 561 /** Empty GL instance model */
#define LIBMC_ERROR_INVALIDGLINSTANCEMODEL 562 /** Invalid GL instance model */
#define LIBMC_ERROR_GLINSTANCEMODELNOTFOUND 563 /** GL instance model not found */
#define LIBMC_ERROR_DUPLICATEGLINSTANCENAME 564 /** Duplicate GL instance name */
#define LIBMC_ERROR_INVALIDJOURNALSTREAMCAPACITY 565 /** Invalid journal stream capacity */
#define LIBMC_ERROR_INVALIDUIFORMAT 566 /** Invalid UI format */
#define LIBMC_ERROR_INVALIDJOURNALTIMESTAMP 567 /** Invalid Journal Timestamp */
#define LIBMC_ERROR_CHUNKTIMESTREAMNOTCONTINUOUS 568 /** Chunk time stream not continuous */
#define LIBMC_ERROR_JOURNALVARIABLENOTFOUND 569 /** Journal Variable not found */
#define LIBMC_ERROR_INVALIDJOURNALSTREAMQUERY 570 /** Invalid journal stream query */
#define LIBMC_ERROR_INVALIDJOURNALCOMPUTEDATA 571 /** Invalid journal compute data */
#define LIBMC_ERROR_INVALIDJOURNALCOMPUTEINTERVAL 572 /** Invalid journal compute interval */
#define LIBMC_ERROR_DATASERIESNOTFOUND 573 /** Data series not found */
#define LIBMC_ERROR_DATASERIESISEMPTY 574 /** Data series is empty */
#define LIBMC_ERROR_EMPTYALERTIDENTIFIER 575 /** Empty alert identifier */
#define LIBMC_ERROR_INVALIDALERTIDENTIFIER 576 /** Invalid alert identifier */
#define LIBMC_ERROR_ALERTDEFINITIONNOTFOUND 577 /** Alert definition not found */
#define LIBMC_ERROR_DUPLICATEALERTIDENTIFIER 578 /** Duplicate alert identifier */
#define LIBMC_ERROR_EMPTYLANGUAGEIDENTIFIER 579 /** Empty language identifier */
#define LIBMC_ERROR_EMPTYLANGUAGESTRINGIDENTIFIER 580 /** Empty language string identifier */
#define LIBMC_ERROR_INVALIDLANGUAGEIDENTIFIER 581 /** Invalid language identifier */
#define LIBMC_ERROR_INVALIDLANGUAGESTRINGIDENTIFIER 582 /** Invalid language string identifier */
#define LIBMC_ERROR_INVALIDLANGUAGEDEFINITION 583 /** Invalid language definition */

/*************************************************************************************************************************
 Error strings for LibMC
**************************************************************************************************************************/

inline const char * LIBMC_GETERRORSTRING (LibMCResult nErrorCode) {
  switch (nErrorCode) {
    case LIBMC_SUCCESS: return "no error";
    case LIBMC_ERROR_NOTIMPLEMENTED: return "functionality not implemented";
    case LIBMC_ERROR_INVALIDPARAM: return "an invalid parameter was passed";
    case LIBMC_ERROR_INVALIDCAST: return "a type cast failed";
    case LIBMC_ERROR_BUFFERTOOSMALL: return "a provided buffer is too small";
    case LIBMC_ERROR_GENERICEXCEPTION: return "a generic exception occurred";
    case LIBMC_ERROR_COULDNOTLOADLIBRARY: return "the library could not be loaded";
    case LIBMC_ERROR_COULDNOTFINDLIBRARYEXPORT: return "a required exported symbol could not be found in the library";
    case LIBMC_ERROR_INCOMPATIBLEBINARYVERSION: return "the version of the binary interface does not match the bindings interface";
    case LIBMC_ERROR_COULDNOTPARSECONFIGURATION: return "could not parse configuration";
    case LIBMC_ERROR_DUPLICATESTATENAME: return "duplicate state name";
    case LIBMC_ERROR_STATENOTFOUND: return "state not found";
    case LIBMC_ERROR_DUPLICATEOUTSTATE: return "duplicate out state";
    case LIBMC_ERROR_MISSINGMACHINEDEFINITION: return "missing machine definition";
    case LIBMC_ERROR_MISSINGINSTANCENAME: return "missing instance name";
    case LIBMC_ERROR_DUPLICATEMACHINEINSTANCE: return "duplicate machine instance";
    case LIBMC_ERROR_MISSINGXMLSCHEMA: return "missing XML schema";
    case LIBMC_ERROR_INVALIDXMLSCHEMA: return "invalid XML schema";
    case LIBMC_ERROR_MISSINGSTATENAME: return "missing state name";
    case LIBMC_ERROR_MISSINGOUTSTATETARGET: return "missing outstate target";
    case LIBMC_ERROR_INVALIDOUTSTATETARGET: return "invalid outstate target";
    case LIBMC_ERROR_NOINITSTATE: return "no init state";
    case LIBMC_ERROR_NOFAILEDSTATE: return "no failed state";
    case LIBMC_ERROR_INITSTATENOTFOUND: return "init state not found";
    case LIBMC_ERROR_FAILEDSTATENOTFOUND: return "failed state not found";
    case LIBMC_ERROR_MISSINGINITSTATE: return "missing init state";
    case LIBMC_ERROR_MISSINGFAILEDSTATE: return "missing failed state";
    case LIBMC_ERROR_MISSINGPLUGINNAME: return "missing plugin name";
    case LIBMC_ERROR_EMPTYINITSTATE: return "empty init state";
    case LIBMC_ERROR_EMPTYFAILEDSTATE: return "empty failed state";
    case LIBMC_ERROR_EMPTYPLUGINNAME: return "empty plugin name";
    case LIBMC_ERROR_COULDNOTCREATESTATEFACTORY: return "could not create state factory";
    case LIBMC_ERROR_INVALIDSTATENAME: return "invalid state name";
    case LIBMC_ERROR_COULDNOTCREATESTATE: return "could not create state";
    case LIBMC_ERROR_COULDNOTINITIALIZEFACTORY: return "could not initialize factory";
    case LIBMC_ERROR_COULDNOTFINALIZEFACTORY: return "could not finalize factory";
    case LIBMC_ERROR_COULDNOTLOADPLUGIN: return "could not load plugin";
    case LIBMC_ERROR_NOCURRENTSTATE: return "no current state";
    case LIBMC_ERROR_NOPLUGINSTATE: return "no plugin state";
    case LIBMC_ERROR_COULDNOTEXECUTEPLUGIN: return "could not execute plugin";
    case LIBMC_ERROR_TOOMANYMACHINEINSTANCES: return "too many machine instances";
    case LIBMC_ERROR_INVALIDINDEX: return "invalid index";
    case LIBMC_ERROR_NOOUTSTATEGIVEN: return "no new outstate has been given";
    case LIBMC_ERROR_INVALIDOUTSTATEGIVEN: return "invalid outstate has been given";
    case LIBMC_ERROR_INVALIDREPEATDELAY: return "invalid repeat delay";
    case LIBMC_ERROR_INVALIDEXECUTIONDELAY: return "invalid execution delay";
    case LIBMC_ERROR_MISSINGREPEATDELAY: return "missing repeat delay";
    case LIBMC_ERROR_THREADISRUNNING: return "thread is running";
    case LIBMC_ERROR_THREADISNOTRUNNING: return "thread is not running";
    case LIBMC_ERROR_DUPLICATESIGNAL: return "duplicate signal";
    case LIBMC_ERROR_INVALIDSIGNALNAME: return "invalid signal name";
    case LIBMC_ERROR_MISSINGSIGNALNAME: return "missing signal name";
    case LIBMC_ERROR_MISSINGSERVERNODE: return "missing server node";
    case LIBMC_ERROR_MISSINGHOSTNAME: return "missing host name";
    case LIBMC_ERROR_MISSINGPORT: return "missing port";
    case LIBMC_ERROR_UUIDGENERATIONFAILED: return "uuid generation failed";
    case LIBMC_ERROR_INVALIDBUFFERSIZE: return "invalid buffer size";
    case LIBMC_ERROR_COULDNOTCONVERTTOUTF8: return "could not convert to utf8";
    case LIBMC_ERROR_NOCOLUMNAVAILABLE: return "no column available";
    case LIBMC_ERROR_INVALIDTEXTCOLUMN: return "invalid text column";
    case LIBMC_ERROR_INVALIDCOLUMNTYPE: return "invalid column type";
    case LIBMC_ERROR_TOOMANYREQUESTEDLOGS: return "too many requested logs";
    case LIBMC_ERROR_MISSINGINSTANCEDESCRIPTION: return "missing instance description";
    case LIBMC_ERROR_DUPLICATEPARAMETERGROUPNAME: return "duplicate parameter group name";
    case LIBMC_ERROR_MISSINGPARAMETERGROUPNAME: return "missing parameter group name";
    case LIBMC_ERROR_EMPTYPARAMETERGROUPNAME: return "empty parameter group name";
    case LIBMC_ERROR_MISSINGPARAMETERGROUPDESCRIPTION: return "missing parameter group description";
    case LIBMC_ERROR_EMPTYPARAMETERGROUPDESCRIPTION: return "empty parameter group description";
    case LIBMC_ERROR_TOOMANYPARAMETERS: return "too many parameters";
    case LIBMC_ERROR_TOOMANYPARAMETERGROUPS: return "too many parameter groups";
    case LIBMC_ERROR_DUPLICATEPARAMETERNAME: return "duplicate parameter name";
    case LIBMC_ERROR_MISSINGPARAMETERNAME: return "missing parameter name";
    case LIBMC_ERROR_EMPTYPARAMETERNAME: return "empty parameter name";
    case LIBMC_ERROR_MISSINGPARAMETERDESCRIPTION: return "missing parameter description";
    case LIBMC_ERROR_EMPTYPARAMETERDESCRIPTION: return "empty parameter description";
    case LIBMC_ERROR_PARAMETERNOTFOUND: return "parameter not found";
    case LIBMC_ERROR_MISSINGPARAMETERDEFAULTVALUE: return "missing parameter default value";
    case LIBMC_ERROR_MISSINGDATACONFIGNODE: return "missing data config node";
    case LIBMC_ERROR_MISSINGDIRECTORY: return "missing directory";
    case LIBMC_ERROR_MISSINGDATABASETYPE: return "missing database type";
    case LIBMC_ERROR_MISSINGSQLITEINFO: return "missing sqlite info";
    case LIBMC_ERROR_UNKNOWNDATABASETYPE: return "unknown database type";
    case LIBMC_ERROR_STORAGENOTINITIALISED: return "storage not initialised";
    case LIBMC_ERROR_COULDNOTCONVERTTOUTF16: return "could not convert to utf 16";
    case LIBMC_ERROR_COULDNOTCREATEFILE: return "could not create file";
    case LIBMC_ERROR_COULDNOTSEEKSTREAM: return "could not seek stream";
    case LIBMC_ERROR_COULDNOTGETSTREAMPOSITION: return "could not get stream position";
    case LIBMC_ERROR_COULDNOTWRITESTREAM: return "could not write stream";
    case LIBMC_ERROR_INVALIDDATABASEMIGRATION: return "invalid database migration";
    case LIBMC_ERROR_INTERNALERROR: return "internal error";
    case LIBMC_ERROR_COULDNOTSTORECONTENTSTREAM: return "could not store content stream";
    case LIBMC_ERROR_DATABASENOTINITIALISED: return "database not initialised";
    case LIBMC_ERROR_PARAMETERGROUPNOTFOUND: return "parameter group not found";
    case LIBMC_ERROR_SIGNALNOTFOUND: return "signal not found";
    case LIBMC_ERROR_STATEMACHINENOTFOUND: return "state machine not found.";
    case LIBMC_ERROR_MISSINGPARAMETERTYPE: return "missing parameter type.";
    case LIBMC_ERROR_INVALIDPARAMETERTYPE: return "invalid parameter type.";
    case LIBMC_ERROR_COULDNOTPARSEJSON: return "could not parse json.";
    case LIBMC_ERROR_INVALIDJSONFORMAT: return "invalid json format.";
    case LIBMC_ERROR_URLNOTFOUND: return "url not found.";
    case LIBMC_ERROR_GENERICBADREQUEST: return "generic bad request.";
    case LIBMC_ERROR_SQLITE_ERROR: return "SQLite: Generic Error";
    case LIBMC_ERROR_SQLITE_INTERNAL: return "SQLite: Internal logic error in SQLite";
    case LIBMC_ERROR_SQLITE_PERM: return "SQLite: Access permission denied";
    case LIBMC_ERROR_SQLITE_ABORT: return "SQLite: Callback routine requested an abort";
    case LIBMC_ERROR_SQLITE_BUSY: return "SQLite: The database file is locked";
    case LIBMC_ERROR_SQLITE_LOCKED: return "SQLite: A table in the database is locked";
    case LIBMC_ERROR_SQLITE_NOMEM: return "SQLite: A malloc failed";
    case LIBMC_ERROR_SQLITE_READONLY: return "SQLite: Attempt to write a readonly database";
    case LIBMC_ERROR_SQLITE_INTERRUPT: return "SQLite: Operation terminated by sqlite3_interrupt";
    case LIBMC_ERROR_SQLITE_IOERR: return "SQLite: Some kind of disk I/O error occurred";
    case LIBMC_ERROR_SQLITE_CORRUPT: return "SQLite: The database disk image is malformed";
    case LIBMC_ERROR_SQLITE_NOTFOUND: return "SQLite: Unknown opcode in sqlite3_file_control";
    case LIBMC_ERROR_SQLITE_FULL: return "SQLite: Insertion failed because database is full";
    case LIBMC_ERROR_SQLITE_CANTOPEN: return "SQLite: Unable to open the database file";
    case LIBMC_ERROR_SQLITE_PROTOCOL: return "SQLite: Database lock protocol error";
    case LIBMC_ERROR_SQLITE_SCHEMA: return "SQLite: The database schema changed";
    case LIBMC_ERROR_SQLITE_TOOBIG: return "SQLite: String or BLOB exceeds size limit";
    case LIBMC_ERROR_SQLITE_CONSTRAINT: return "SQLite: Abort due to constraint violation";
    case LIBMC_ERROR_SQLITE_MISMATCH: return "SQLite: Data type mismatch";
    case LIBMC_ERROR_SQLITE_MISUSE: return "SQLite: Library used incorrectly";
    case LIBMC_ERROR_SQLITE_NOLFS: return "SQLite: Uses OS features not supported on host";
    case LIBMC_ERROR_SQLITE_AUTH: return "SQLite: Authorization denied";
    case LIBMC_ERROR_SQLITE_RANGE: return "SQLite: 2nd parameter to sqlite3_bind out of range";
    case LIBMC_ERROR_SQLITE_NOTADB: return "SQLite: File opened that is not a database file";
    case LIBMC_ERROR_SQLITE_NOTICE: return "SQLite: Notifications from sqlite3_log";
    case LIBMC_ERROR_SQLITE_WARNING: return "SQLite: Warnings from sqlite3_log";
    case LIBMC_ERROR_SQLITE_OTHER: return "SQLite: Other Error";
    case LIBMC_ERROR_SQLITE_TOOMANYRESULTROWS: return "too many result rows";
    case LIBMC_ERROR_COULDNOTREADZIPFILE: return "Could not read ZIP file";
    case LIBMC_ERROR_COULDNOTOPENZIPFILE: return "Could not open ZIP file";
    case LIBMC_ERROR_COULDNOTGETZIPENTRIES: return "Could not get ZIP file entries";
    case LIBMC_ERROR_ZIPENTRYNOTFOUND: return "ZIP Entry not found";
    case LIBMC_ERROR_COULDNOTSTATZIPENTRY: return "Could not stat ZIP entry";
    case LIBMC_ERROR_COULDNOTOPENZIPENTRY: return "Could not open ZIP entry";
    case LIBMC_ERROR_COULDNOTREADZIPSTREAM: return "Could not read ZIP stream";
    case LIBMC_ERROR_COULDNOTREADFULLZIPDATA: return "Could not read full zip data";
    case LIBMC_ERROR_COULDNOTFINDRESOURCEINDEX: return "Could not find resource index.";
    case LIBMC_ERROR_COULDNOTPARSERESOURCEINDEX: return "Could not parse resource index.";
    case LIBMC_ERROR_EMPTYRESOURCEINDEX: return "Empty resource index.";
    case LIBMC_ERROR_MISSINGRESOURCEINDEX: return "Missing resource index.";
    case LIBMC_ERROR_MISSINGRESOURCENAME: return "Missing resource name.";
    case LIBMC_ERROR_MISSINGRESOURCEFILENAME: return "Missing resource filename.";
    case LIBMC_ERROR_MISSINGRESOURCESIZE: return "Missing resource size.";
    case LIBMC_ERROR_MISSINGRESOURCECONTENTTYPE: return "Missing resource content type.";
    case LIBMC_ERROR_DRIVERALREADYREGISTERED: return "Driver already registered.";
    case LIBMC_ERROR_DRIVERNOTFOUND: return "Driver not found.";
    case LIBMC_ERROR_MISSINGDRIVERNAME: return "Missing driver name.";
    case LIBMC_ERROR_MISSINGDRIVERTYPE: return "Missing driver type.";
    case LIBMC_ERROR_MISSINGDRIVERLIBRARY: return "Missing driver library.";
    case LIBMC_ERROR_DRIVERALREADYRESERVED: return "Driver has already been reserved by an instance.";
    case LIBMC_ERROR_LIBRARYPATHNOTFOUND: return "Library path not found.";
    case LIBMC_ERROR_TOOLPATHENTITYNOTLOADED: return "Toolpath entity not loaded";
    case LIBMC_ERROR_TOOLPATHENTITYREFERENCEERROR: return "Toolpath entity reference error";
    case LIBMC_ERROR_TOOLPATHENTITYINVALIDFILE: return "Toolpath entity is invalid";
    case LIBMC_ERROR_NO3MFLIBRARY: return "No 3MF Library specified";
    case LIBMC_ERROR_INVALIDPOINTCOUNT: return "Invalid point count";
    case LIBMC_ERROR_DUPLICATEJOBUUID: return "Duplicate job uuid";
    case LIBMC_ERROR_INVALIDJOBSTATUS: return "Invalid job status";
    case LIBMC_ERROR_INVALIDSTREAMCONTEXT: return "Invalid stream context";
    case LIBMC_ERROR_JOBUUIDNOTFOUND: return "Job uuid not found";
    case LIBMC_ERROR_INVALIDJOBNAME: return "Invalid job name";
    case LIBMC_ERROR_INVALIDJOBTIMESTAMP: return "Invalid job timestamp";
    case LIBMC_ERROR_INVALIDUSERID: return "Invalid job name";
    case LIBMC_ERROR_INVALIDSTORAGECALLBACKSIGNATURE: return "Invalid storage callback signature";
    case LIBMC_ERROR_INVALIDSTORAGECALLBACKSTREAM: return "Invalid storage callback stream";
    case LIBMC_ERROR_INVALIDSTORAGEPATH: return "Invalid storage path";
    case LIBMC_ERROR_STORAGESTREAMNOTFOUND: return "Storage Stream not found";
    case LIBMC_ERROR_DUPLICATESTORAGESTREAM: return "Duplicate Storage Stream";
    case LIBMC_ERROR_INVALIDPARTIALUPLOAD: return "Invalid Partial Upload";
    case LIBMC_ERROR_PARTIALUPLOADNOTFINISHED: return "Partial Upload not finished";
    case LIBMC_ERROR_APIREQUESTNOTHANDLED: return "API Request not handled";
    case LIBMC_ERROR_APIREQUESTALREADYHANDLED: return "API Request already handled";
    case LIBMC_ERROR_INVALIDAPIREQUESTTYPE: return "Invalid API Request type";
    case LIBMC_ERROR_INVALIDUPLOADSTREAM: return "Invalid Upload Stream";
    case LIBMC_ERROR_COULDNOTPARSEJSONREQUEST: return "Could not parse JSON request";
    case LIBMC_ERROR_INVALIDCONTEXTUUID: return "Invalid Context UUID";
    case LIBMC_ERROR_INVALIDUPLOADNAME: return "Invalid Upload Name";
    case LIBMC_ERROR_INVALIDMIMETYPE: return "Invalid Mime Type";
    case LIBMC_ERROR_INVALIDSTREAMSIZE: return "Invalid Stream Size";
    case LIBMC_ERROR_INVALIDSHA256SUM: return "Invalid SHA256 Sum";
    case LIBMC_ERROR_INVALIDSTREAMUUID: return "Invalid Stream UUID";
    case LIBMC_ERROR_INVALIDFIELDNAME: return "Invalid field name";
    case LIBMC_ERROR_UPLOADSIZEMISMATCH: return "Upload size mismatch";
    case LIBMC_ERROR_CONTENTTYPENOTACCEPTED: return "Content type not accepted";
    case LIBMC_ERROR_NOCURRENTUPLOAD: return "No current upload";
    case LIBMC_ERROR_UPLOADCHECKSUMMISMATCH: return "Upload checksum mismatch";
    case LIBMC_ERROR_INVALIDSTORAGESTREAMSTATUS: return "Invalid storage stream status";
    case LIBMC_ERROR_CONTEXTUUIDNOTACCEPTED: return "Context uuid not accepted";
    case LIBMC_ERROR_INVALIDBUILDUUID: return "Invalid build uuid";
    case LIBMC_ERROR_MISSINGTHREADCOUNT: return "Missing thread count";
    case LIBMC_ERROR_INVALIDTHREADCOUNT: return "Invalid thread count";
    case LIBMC_ERROR_COULDNOTUPDATEBUILDSTATUS: return "Could not update build status";
    case LIBMC_ERROR_INVALIDITERATOR: return "Invalid iterator";
    case LIBMC_ERROR_INVALIDDATATYPE: return "Invalid data type";
    case LIBMC_ERROR_COULDNOTSENDSIGNAL: return "Could not send signal";
    case LIBMC_ERROR_MISSINGSIGNALPARAMETER: return "Missing signal parameter";
    case LIBMC_ERROR_NOUSERINTERFACEDEFINITION: return "No user interface definition";
    case LIBMC_ERROR_MISSINGAPPNAME: return "Missing app name";
    case LIBMC_ERROR_MISSINGCOPYRIGHT: return "Missing copyright";
    case LIBMC_ERROR_MISSINGMAINPAGE: return "Missing main page";
    case LIBMC_ERROR_MISSINGMENUITEMID: return "Missing menu item id";
    case LIBMC_ERROR_MISSINGMENUITEMICON: return "Missing menu item icon";
    case LIBMC_ERROR_MISSINGMENUITEMCAPTION: return "Missing menu item caption";
    case LIBMC_ERROR_MISSINGTARGETPAGE: return "Missing menu item target page";
    case LIBMC_ERROR_MISSINGMENUNODE: return "Missing menu node";
    case LIBMC_ERROR_MISSINGTOOLBARNODE: return "Missing toolbar node";
    case LIBMC_ERROR_MISSINGTOOLBARITEMID: return "Missing toolbar item id";
    case LIBMC_ERROR_MISSINGTOOLBARITEMICON: return "Missing toolbar item icon";
    case LIBMC_ERROR_MISSINGTOOLBARITEMCAPTION: return "Missing toolbar item caption";
    case LIBMC_ERROR_MISSINGSERVICESNODE: return "Missing services node";
    case LIBMC_ERROR_INVALIDSESSIONUUID: return "Invalid session UUID";
    case LIBMC_ERROR_INVALIDSESSIONKEY: return "Invalid session Key";
    case LIBMC_ERROR_SESSIONNOTAUTHORIZED: return "Session not authorized";
    case LIBMC_ERROR_INVALIDUSERNAME: return "Invalid user name";
    case LIBMC_ERROR_INVALIDPASSWORD: return "Invalid password";
    case LIBMC_ERROR_INVALIDAUTHORIZATION: return "Invalid Authorization";
    case LIBMC_ERROR_USERALREADYAUTHORIZED: return "User already authorized";
    case LIBMC_ERROR_INVALIDSESSIONTOKEN: return "Invalid session token";
    case LIBMC_ERROR_INVALIDCLIENTKEY: return "Invalid client key";
    case LIBMC_ERROR_INVALIDLOGIN: return "Invalid login credentials";
    case LIBMC_ERROR_DUPLICATEPAGE: return "Duplicate page";
    case LIBMC_ERROR_PAGENOTFOUND: return "Page not found";
    case LIBMC_ERROR_MISSINGPAGENAME: return "Missing page name";
    case LIBMC_ERROR_INVALIDPAGENAME: return "Invalid page name";
    case LIBMC_ERROR_MODULENOTFOUND: return "Module not found";
    case LIBMC_ERROR_DUPLICATEMODULE: return "Duplicate module";
    case LIBMC_ERROR_INVALIDMODULENAME: return "Invalid module name";
    case LIBMC_ERROR_INVALIDMODULETYPE: return "Invalid module type";
    case LIBMC_ERROR_INVALIDHEADLINE: return "Invalid headline";
    case LIBMC_ERROR_USERNOTFOUND: return "User not found";
    case LIBMC_ERROR_STREAMISNOTIMAGE: return "Stream is not image";
    case LIBMC_ERROR_TOOMANYCONTENTPARAMETERS: return "Too many content parameters";
    case LIBMC_ERROR_MISSINGCONTENTSTATEMACHINENAME: return "Missing content state machine name";
    case LIBMC_ERROR_MISSINGCONTENTGROUPNAME: return "Missing content group name";
    case LIBMC_ERROR_INVALIDENTRIESPERPAGE: return "Invalid entries per page";
    case LIBMC_ERROR_MODULEITEMNOTFOUND: return "Module item not found";
    case LIBMC_ERROR_DERIVEDPARAMETERSREADONLY: return "Derived parameters are read only.";
    case LIBMC_ERROR_TOOMANYJOURNALVARIABLES: return "Too many journal variables";
    case LIBMC_ERROR_JOURNALISNOTINITIALISING: return "Too many journal variables";
    case LIBMC_ERROR_JOURNALISNOTRECORDING: return "Journal is not recording.";
    case LIBMC_ERROR_INVALIDVARIABLETYPE: return "Invalid variable type";
    case LIBMC_ERROR_INVALIDVARIABLEUNITS: return "Invalid variable units";
    case LIBMC_ERROR_UNITSHAVEALREADYBEENSET: return "Units have already been set";
    case LIBMC_ERROR_UNITSHAVENOTBEENSET: return "Units have not been set";
    case LIBMC_ERROR_INVALIDTIMESTAMP: return "Invalid time stamp";
    case LIBMC_ERROR_NOCURRENTJOURNALCHUNK: return "No current journal chunk";
    case LIBMC_ERROR_DUPLICATEJOURNALID: return "Duplicate journal id";
    case LIBMC_ERROR_RESOURCEENTRYNOTFOUND: return "Resource entry not found";
    case LIBMC_ERROR_NOCORERESOURCEPACKAGE: return "No core resource package";
    case LIBMC_ERROR_INVALIDASPECTRATIO: return "Invalid aspect ratio";
    case LIBMC_ERROR_MISSINGLOGORESOURCE: return "Missing logo resource";
    case LIBMC_ERROR_NOUSERINTERFACEPLUGIN: return "No user interface plugin";
    case LIBMC_ERROR_COULDNOTLOADUILIBRARY: return "Could not load UI library";
    case LIBMC_ERROR_EVENTNAMENOTFOUND: return "Event name not found";
    case LIBMC_ERROR_INVALIDEVENTSENDER: return "Invalid event context";
    case LIBMC_ERROR_INVALIDEVENTCONTEXT: return "Invalid event sender";
    case LIBMC_ERROR_INVALIDLAYERINDEX: return "Invalid layer index";
    case LIBMC_ERROR_TEMPBASEPATHEMPTY: return "Empty base path for temporary files";
    case LIBMC_ERROR_PROFILENOTFOUND: return "Profile not found.";
    case LIBMC_ERROR_INVALIDSERVICEHANDLER: return "Invalid service handler.";
    case LIBMC_ERROR_INVALIDMAXTHREADCOUNT: return "Invalid max thread count.";
    case LIBMC_ERROR_INVALIDTOOLPATHSTREAMUUID: return "Invalid toolpath stream uuid";
    case LIBMC_ERROR_MISSINGSECTIONHEIGHT: return "Missing section height";
    case LIBMC_ERROR_INVALIDSECTIONHEIGHT: return "Invalid section height";
    case LIBMC_ERROR_MISSINGSECTIONWIDTH: return "Missing section width";
    case LIBMC_ERROR_INVALIDSECTIONWIDTH: return "Invalid section width";
    case LIBMC_ERROR_TOOLPATHMETADATANOTFOUND: return "Toolpath metadata not found";
    case LIBMC_ERROR_BUILDITEMHASNOUUID: return "Build item has no uuid";
    case LIBMC_ERROR_OBJECTHASNOUUID: return "Object has no uuid";
    case LIBMC_ERROR_COULDNOTPARSEEVENTPARAMETERS: return "Could not parse event parameters";
    case LIBMC_ERROR_INVALIDEVENTPARAMETERS: return "Invalid event parameters";
    case LIBMC_ERROR_INVALIDFORMVALUES: return "Invalid form values";
    case LIBMC_ERROR_FORMNAMEMISSING: return "Form name is missing";
    case LIBMC_ERROR_FORMENTITYNAMEMISSING: return "Form entity name is missing";
    case LIBMC_ERROR_FORMNOTFOUND: return "Form not found";
    case LIBMC_ERROR_FORMENTITYNOTFOUND: return "Form entity not found";
    case LIBMC_ERROR_DUPLICATEENTITYNAME: return "Duplicate form entity name";
    case LIBMC_ERROR_COULDNOTFINDEVENTSENDERPAGE: return "Could not find event sender page";
    case LIBMC_ERROR_COULDNOTFINDEVENTSENDER: return "Could not find event sender";
    case LIBMC_ERROR_DUPLICATEFORMNAME: return "Duplicate form name";
    case LIBMC_ERROR_EVENTNOTFOUND: return "Event not found";
    case LIBMC_ERROR_MISSINGCOLORNAME: return "Missing color name";
    case LIBMC_ERROR_MISSINGCOLORREDCHANNEL: return "Missing red color channel";
    case LIBMC_ERROR_MISSINGCOLORGREENCHANNEL: return "Missing green color channel";
    case LIBMC_ERROR_MISSINGCOLORBLUECHANNEL: return "Missing blue color channel";
    case LIBMC_ERROR_INVALIDCOLORREDCHANNEL: return "Invalid red color channel";
    case LIBMC_ERROR_INVALIDCOLORGREENCHANNEL: return "Invalid green color channel";
    case LIBMC_ERROR_INVALIDCOLORBLUECHANNEL: return "Invalid blue color channel";
    case LIBMC_ERROR_MISSINGCOLUMNWIDTH: return "Missing column width";
    case LIBMC_ERROR_INVALIDCOLUMNWIDTH: return "Invalid column width";
    case LIBMC_ERROR_MISSINGCOLUMNUNIT: return "Missing column unit";
    case LIBMC_ERROR_MISSINGROWHEIGHT: return "Missing row height";
    case LIBMC_ERROR_INVALIDROWHEIGHT: return "Invalid row height";
    case LIBMC_ERROR_MISSINGROWUNIT: return "Missing row unit";
    case LIBMC_ERROR_MISSINGCOLUMNSTARTATTRIB: return "Missing column start attrib";
    case LIBMC_ERROR_MISSINGCOLUMNENDATTRIB: return "Missing column end attrib";
    case LIBMC_ERROR_MISSINGROWSTARTATTRIB: return "Missing row start attrib";
    case LIBMC_ERROR_MISSINGROWENDATTRIB: return "Missing row end attrib";
    case LIBMC_ERROR_INVALIDCOLUMNSTARTATTRIB: return "Invalid column start attrib";
    case LIBMC_ERROR_INVALIDCOLUMNENDATTRIB: return "Invalid column end attrib";
    case LIBMC_ERROR_INVALIDROWSTARTATTRIB: return "Invalid row start attrib";
    case LIBMC_ERROR_INVALIDROWENDATTRIB: return "Invalid row end attrib";
    case LIBMC_ERROR_INVALIDPARAMETERPATH: return "Invalid parameter path";
    case LIBMC_ERROR_INVALIDPARAMETERINSTANCE: return "Invalid parameter instance";
    case LIBMC_ERROR_INVALIDPARAMETERGROUP: return "Invalid parameter group";
    case LIBMC_ERROR_INVALIDPARAMETERNAME: return "Invalid parameter name";
    case LIBMC_ERROR_INVALIDSTATEMACHINENAME: return "Invalid state machine name";
    case LIBMC_ERROR_INVALIDGRIDPOSITION: return "Invalid grid position";
    case LIBMC_ERROR_INVALIDDIALOGNAME: return "Invalid dialog name";
    case LIBMC_ERROR_DUPLICATEDIALOG: return "Duplicate dialog";
    case LIBMC_ERROR_DIALOGNOTFOUND: return "Dialog not found";
    case LIBMC_ERROR_COULDNOTHANDLEEVENT: return "Could not handle event";
    case LIBMC_ERROR_INVALIDFORMPATH: return "Invalid form path";
    case LIBMC_ERROR_MISSINGITEMNAME: return "Missing item name";
    case LIBMC_ERROR_INVALIDITEMPATH: return "Invalid item path";
    case LIBMC_ERROR_INVALIDMODULEPATH: return "Invalid module path";
    case LIBMC_ERROR_BUILDLISTNAMEMISSING: return "Build list name missing";
    case LIBMC_ERROR_EMPTYITEMPREFIX: return "Empty item prefix";
    case LIBMC_ERROR_INVALIDITEMPREFIX: return "Invalid item prefix";
    case LIBMC_ERROR_EMPTYITEMNAME: return "Empty item name";
    case LIBMC_ERROR_EXPRESSIONVALUEGIVENTWICE: return "Expression value is given twice";
    case LIBMC_ERROR_INVALIDINTEGEREXPRESSION: return "Invalid integer expression";
    case LIBMC_ERROR_INVALIDNUMBEREXPRESSION: return "Invalid number expression";
    case LIBMC_ERROR_INVALIDBOOLEANEXPRESSION: return "Invalid boolean expression";
    case LIBMC_ERROR_INVALIDPERSISTENCYNAME: return "Invalid persistency name";
    case LIBMC_ERROR_ONLYVALUEDPARAMETERSCANBEPERSISTENT: return "Only valued parameters can be persistent";
    case LIBMC_ERROR_PLATFORMINFORMATIONMISSING: return "Platform information missing";
    case LIBMC_ERROR_INVALIDBUTTONDISTRIBUTION: return "Invalid button distribution";
    case LIBMC_ERROR_EXPRESSIONVALUEMISSING: return "Expression value missing";
    case LIBMC_ERROR_INVALIDVIEWPORTCOORD: return "Invalid viewport coordinate";
    case LIBMC_ERROR_VIEWPORTCOORDMISSING: return "Viewport coordinate missing";
    case LIBMC_ERROR_MACHINEINSTANCENOTFOUND: return "Machine instance not found";
    case LIBMC_ERROR_COULDNOTGETTEMPPATHFROMWINDOWS: return "Could not get temp path from Windows";
    case LIBMC_ERROR_DUPLICATEBUTTONNAME: return "Duplicate button name";
    case LIBMC_ERROR_SERVERCONFIGURATIONNOTLOADED: return "Server configuration not loaded";
    case LIBMC_ERROR_COULDNOTPARSESERVERCONFIGURATION: return "Could not pars server configuration";
    case LIBMC_ERROR_MISSINGSERVERCONFIGURATIONNODE: return "Missing server configuration node";
    case LIBMC_ERROR_COULDNOTFINDLIBRARYENTRY: return "Could not find library entry";
    case LIBMC_ERROR_INVALIDPORT: return "Invalid port";
    case LIBMC_ERROR_MISSINGDATANODE: return "Missing data node";
    case LIBMC_ERROR_MISSINGDATADIRECTORY: return "Missing data directory";
    case LIBMC_ERROR_DATADIRECTORYDOESNOTEXISTS: return "Data directory does not exist:";
    case LIBMC_ERROR_INVALIDDATADIRECTORY: return "Invalid data directory";
    case LIBMC_ERROR_INVALIDSQLITEDBPATH: return "Missing SQLite DB Path";
    case LIBMC_ERROR_INVALIDDATABASETYPE: return "Invalid database type";
    case LIBMC_ERROR_DEFAULTPACKAGEMISSING: return "Default package missing";
    case LIBMC_ERROR_DEFAULTPACKAGENAMEMISSING: return "Default package name missing";
    case LIBMC_ERROR_COULDNOTPARSEPACKAGEXML: return "Could not parse package xml";
    case LIBMC_ERROR_MISSINGPACKAGENODE: return "Missing package node";
    case LIBMC_ERROR_MISSINGBUILDNODE: return "Missing build node";
    case LIBMC_ERROR_MISSINGBUILDNAME: return "Missing build name";
    case LIBMC_ERROR_MISSINGCONFIGURATIONNAME: return "Missing configuration name";
    case LIBMC_ERROR_MISSINGCORECLIENT: return "Missing core client";
    case LIBMC_ERROR_MISSINGLIBRARYNAME: return "Missing library name";
    case LIBMC_ERROR_MISSINGLIBRARYIMPORTNAME: return "Missing library import name";
    case LIBMC_ERROR_DUPLICATELIBRARYNAME: return "Duplicate library name";
    case LIBMC_ERROR_INVALIDTRANSFORMINTERVAL: return "Invalid transform interval";
    case LIBMC_ERROR_INVALIDTRANSFORMCOORDINATE: return "Invalid transform coordinate";
    case LIBMC_ERROR_SUCCESSSTATENOTFOUND: return "success state not found";
    case LIBMC_ERROR_DUPLICATESERVERPRIVATEKEY: return "duplicate server private key";
    case LIBMC_ERROR_DUPLICATESERVERCERTIFICATE: return "duplicate server certificate";
    case LIBMC_ERROR_INVALIDGITHASH: return "Invalid git hash";
    case LIBMC_ERROR_COULDNOTPARSETESTDEFINITION: return "Could not parse test definition.";
    case LIBMC_ERROR_MISSINGTESTDEFINITIONNODE: return "Missing test definition node.";
    case LIBMC_ERROR_AMBIGIOUSMAINNODE: return "Ambigious main node";
    case LIBMC_ERROR_MISSINGMAINNODE: return "Missing main node";
    case LIBMC_ERROR_MISSINGLIBRARIESNODE: return "Missing libraries node";
    case LIBMC_ERROR_MISSINGLIBRARYDLLFILENAME: return "Missing library dll filename";
    case LIBMC_ERROR_MISSINGTESTDESCRIPTION: return "Missing test description";
    case LIBMC_ERROR_MISSINGTESTINSTANCENAME: return "Missing test instance name";
    case LIBMC_ERROR_TESTDEFINITIONHASNOINSTANCES: return "Test definition has no instances";
    case LIBMC_ERROR_INVALIDPACKAGEENTRYNAME: return "Invalid package entry name";
    case LIBMC_ERROR_INVALIDPACKAGEENTRYEXTENSION: return "Invalid package entry name";
    case LIBMC_ERROR_INVALIDPACKAGEENTRYFILENAME: return "Invalid package entry file name";
    case LIBMC_ERROR_INVALIDEXPRESSIONVALUE: return "Invalid expression value";
    case LIBMC_ERROR_INVALIDBUTTONNAME: return "Invalid button name";
    case LIBMC_ERROR_RESOURCEENTRYISNOUTF8STRING: return "Resource entry is no UTF8 string";
    case LIBMC_ERROR_AMBIGUOUSDRIVERCONFIGURATION: return "Ambiguous driver configuration";
    case LIBMC_ERROR_COULDNOTCREATEDRIVER: return "Could not create driver";
    case LIBMC_ERROR_EMPTYGROUPNAMEBUTPARAMETERGIVEN: return "Empty group name but parameter given";
    case LIBMC_ERROR_INVALIDDEFAULTXMLNAMESPACE: return "invalid default xml namespace name.";
    case LIBMC_ERROR_INVALIDXMLROOTNODENAME: return "invalid xml root node name.";
    case LIBMC_ERROR_COULDNOTPARSEXMLSTRING: return "could not parse XML String.";
    case LIBMC_ERROR_COULDNOTPARSEXMLDATA: return "could not parse XML Data.";
    case LIBMC_ERROR_XMLDOESNOTCONTAINROOTNODE: return "XML does not contain root node.";
    case LIBMC_ERROR_XMLCONTAINSAMBIGOUSROOTNODES: return "XML contains ambiguous root nodes.";
    case LIBMC_ERROR_XMLDOESNOTCONTAINNAMESPACE: return "XML does not contain namespace.";
    case LIBMC_ERROR_INVALIDXMLDATA: return "invalid XML Data.";
    case LIBMC_ERROR_INVALIDXMLROOTNODEINSTANCE: return "invalid XML root node instance.";
    case LIBMC_ERROR_XMLNAMESPACEPREFIXALREADYREGISTERED: return "XML namespace prefix already registered.";
    case LIBMC_ERROR_XMLNAMESPACEALREADYREGISTERED: return "XML namespace already registered.";
    case LIBMC_ERROR_XMLNAMESPACENOTFOUND: return "XML namespace not found.";
    case LIBMC_ERROR_INVALIDNAMESPACENAME: return "Invalid namespace name.";
    case LIBMC_ERROR_INVALIDNAMESPACEPREFIX: return "Invalid namespace prefix.";
    case LIBMC_ERROR_INVALIDNAMESPACEINDEX: return "Invalid namespace index.";
    case LIBMC_ERROR_INVALIDATTRIBUTEINDEX: return "Invalid attribute index.";
    case LIBMC_ERROR_PROFILEVALUENOTFOUND: return "Profile value not found.";
    case LIBMC_ERROR_INVALIDXMLNODENAME: return "Invalid xml node name.";
    case LIBMC_ERROR_INVALIDXMLNAMESPACE: return "Invalid xml namespace.";
    case LIBMC_ERROR_COULDNOTFINDATTRIBUTE: return "Could not find attribute.";
    case LIBMC_ERROR_DUPLICATEATTRIBUTE: return "Duplicate attribute.";
    case LIBMC_ERROR_INTERNALATTRIBUTEERROR: return "Internal attribute error.";
    case LIBMC_ERROR_XMLNODECHILDNOTFOUND: return "XML node child not found.";
    case LIBMC_ERROR_INVALIDXMLNODEINDEX: return "Invalid XML Node index.";
    case LIBMC_ERROR_INTERNALNODEERROR: return "Internal node error.";
    case LIBMC_ERROR_XMLNODENOTFOUNDINLIST: return "XML node not found in list.";
    case LIBMC_ERROR_COULDNOTFINDXMLNAMESPACE: return "Could not find XML Namespace";
    case LIBMC_ERROR_INVALIDCOMPONENTNAME: return "invalid component name.";
    case LIBMC_ERROR_MISSINGCOMPONENTNAME: return "missing component name.";
    case LIBMC_ERROR_CUSTOMPAGEPROPERTYNAMEMISSING: return "custom page property name missing.";
    case LIBMC_ERROR_CUSTOMPAGEPROPERTYTYPEMISSING: return "custom page property type missing.";
    case LIBMC_ERROR_EMTPYEVENTNAME: return "empty event name.";
    case LIBMC_ERROR_INVALIDEVENTNAME: return "invalid event name.";
    case LIBMC_ERROR_INVALIDEVENTPATH: return "invalid event path.";
    case LIBMC_ERROR_CUSTOMPAGEVENTNAMEMISSING: return "custom page event name missing.";
    case LIBMC_ERROR_INVALIDCUSTOMPAGEVENTNAME: return "invalid custom page event name.";
    case LIBMC_ERROR_DUPLICATECUSTOMPAGEVENTNAME: return "duplicate custom page event name.";
    case LIBMC_ERROR_INVALIDEVENTPARAMETERNAME: return "invalid event parameter name.";
    case LIBMC_ERROR_INVALIDMETADATAINDEX: return "invalid metadata index.";
    case LIBMC_ERROR_METADATAISNOTUNIQUE: return "metadata is not unique.";
    case LIBMC_ERROR_METADATANOTFOUND: return "metadata not found.";
    case LIBMC_ERROR_TIMESTAMPISNOTINCREMENTING: return "Time stamp is not incrementing.";
    case LIBMC_ERROR_INVALIDTIMESTAMPINTERVAL: return "Invalid time stamp interval.";
    case LIBMC_ERROR_TIMESTREAMISEMPTY: return "Time stream is empty.";
    case LIBMC_ERROR_INVALIDTOOLPATHATTRIBUTETYPE: return "Invalid toolpath attribute type.";
    case LIBMC_ERROR_INVALIDSEGMENTINDEX: return "Invalid segment index.";
    case LIBMC_ERROR_INVALIDTOOLPATHATTRIBUTEID: return "Invalid toolpath attribute ID.";
    case LIBMC_ERROR_AMBIGUOUSSEGMENTATTRIBUTETYPE: return "Ambiguous segment attribute type.";
    case LIBMC_ERROR_XMLNODEHASCHILDREN: return "XML Node has children";
    case LIBMC_ERROR_XMLNODEHASTEXTCONTENT: return "XML Node has text content";
    case LIBMC_ERROR_STRINGHANDLERNOTAVAILABLE: return "String handler not available";
    case LIBMC_ERROR_DUPLICATEROLEPERMISSION: return "Duplicate role permission";
    case LIBMC_ERROR_EMPTYACCESSROLEIDENTIFIER: return "Empty access role identifier";
    case LIBMC_ERROR_INVALIDACCESSROLEIDENTIFIER: return "Invalid access role identifier";
    case LIBMC_ERROR_EMPTYACCESSROLEDISPLAYNAME: return "Empty access role display name";
    case LIBMC_ERROR_EMPTYACCESSPERMISSIONIDENTIFIER: return "Empty access permission identifier";
    case LIBMC_ERROR_INVALIDACCESSPERMISSIONIDENTIFIER: return "Invalid access permission identifier";
    case LIBMC_ERROR_EMPTYACCESSPERMISSIONDISPLAYNAME: return "Empty access permission display name";
    case LIBMC_ERROR_EMPTYSTRINGRESOURCENAME: return "Empty string resource name";
    case LIBMC_ERROR_DUPLICATESTRINGRESOURCENAME: return "Duplicate string resource name";
    case LIBMC_ERROR_INVALIDSTRINGRESOURCENAMEIDENTIFIER: return "Invalid string resource name identifier";
    case LIBMC_ERROR_STRINGRESOURCENOTFOUND: return "String resource not found";
    case LIBMC_ERROR_LANGUAGEIDNOTFOUND: return "Language ID not found";
    case LIBMC_ERROR_DUPLICATEPERMISSIONIDENTIFIER: return "Duplicate Permission Identifier";
    case LIBMC_ERROR_DUPLICATEROLEIDENTIFIER: return "Duplicate Role Identifier";
    case LIBMC_ERROR_PERMISSIONNOTFOUND: return "Permission not found";
    case LIBMC_ERROR_ROLENOTFOUND: return "Role not found";
    case LIBMC_ERROR_MISSINGACCESSCONTROLPERMISSIONS: return "Missing access control permissions";
    case LIBMC_ERROR_MISSINGACCESSCONTROLROLES: return "Missing access control roles";
    case LIBMC_ERROR_MISSINGACCESSCONTROLROLEPERMISSIONS: return "Missing access control role permissions";
    case LIBMC_ERROR_MISSINGROLEPERMISSIONIDENTIFIER: return "Missing role permission identifier";
    case LIBMC_ERROR_INVALIDDISCRETEFIELDBUFFER: return "Invalid discrete field buffer";
    case LIBMC_ERROR_INVALIDDISCRETEFIELDFILESIGN: return "Invalid discrete field file sign";
    case LIBMC_ERROR_INCOMPATIBLEDISCRETEFIELDFILEVERSION: return "Incompatible discrete field file version";
    case LIBMC_ERROR_TOONEWDISCRETEFIELDFILEVERSION: return "Too new discrete field file version";
    case LIBMC_ERROR_TOONEWDISCRETEFIELDSTREAMTYPE: return "Too new discrete field stream type";
    case LIBMC_ERROR_INVALIDDISCRETEFIELDDATAOFFSET: return "Invalid discrete field data offset";
    case LIBMC_ERROR_INVALIDDISCRETEFIELDSTREAMSIZE: return "Invalid discrete field stream size";
    case LIBMC_ERROR_INVALIDDISCRETEFIELDINTERNALDATA: return "Invalid discrete field internal data";
    case LIBMC_ERROR_DEFAULTROLEHASNOTBEENSET: return "Default role has not been set";
    case LIBMC_ERROR_EMPTYROLEIDENTIFIER: return "Empty role identifier";
    case LIBMC_ERROR_EMPTYPERMISSIONIDENTIFIER: return "Empty permission identifier";
    case LIBMC_ERROR_USERHASUNKNOWNROLE: return "User has unknown role";
    case LIBMC_ERROR_MISSINGDEFAULTACCESSROLE: return "Missing default access role";
    case LIBMC_ERROR_FIXEDFLOATBUFFEROVERRUN: return "Fixed float buffer overrun";
    case LIBMC_ERROR_MESHENTITYNOTLOADED: return "Mesh entity not loaded";
    case LIBMC_ERROR_MESHENTITYALREADYLOADED: return "Mesh entity already loaded";
    case LIBMC_ERROR_INVALIDMESHFACEID: return "Invalid face ID";
    case LIBMC_ERROR_MESH3MFRESOURCEISEMPTY: return "Mesh 3MF resource is empty";
    case LIBMC_ERROR_INVALIDMESHEDGEID: return "Invalid edge ID";
    case LIBMC_ERROR_INVALIDMESHNODEID: return "Invalid node ID";
    case LIBMC_ERROR_INVALIDGLSCENEMODELNAME: return "Invalid GL scene model name";
    case LIBMC_ERROR_INVALIDGLSCENEINSTANCENAME: return "Invalid GL scene instance name";
    case LIBMC_ERROR_EMPTYGLMODELNAME: return "Empty GL model name";
    case LIBMC_ERROR_INVALIDGLMODELNAME: return "Invalid GL model name";
    case LIBMC_ERROR_DUPLICATEGLMODELNAME: return "Duplicate GL model name";
    case LIBMC_ERROR_MODELGLRESOURCENOTFOUND: return "Model GL Resource not found";
    case LIBMC_ERROR_EMPTYGLINSTANCENAME: return "Empty GL instance name";
    case LIBMC_ERROR_INVALIDGLINSTANCENAME: return "Invalid GL instance name";
    case LIBMC_ERROR_EMPTYGLINSTANCEMODEL: return "Empty GL instance model";
    case LIBMC_ERROR_INVALIDGLINSTANCEMODEL: return "Invalid GL instance model";
    case LIBMC_ERROR_GLINSTANCEMODELNOTFOUND: return "GL instance model not found";
    case LIBMC_ERROR_DUPLICATEGLINSTANCENAME: return "Duplicate GL instance name";
    case LIBMC_ERROR_INVALIDJOURNALSTREAMCAPACITY: return "Invalid journal stream capacity";
    case LIBMC_ERROR_INVALIDUIFORMAT: return "Invalid UI format";
    case LIBMC_ERROR_INVALIDJOURNALTIMESTAMP: return "Invalid Journal Timestamp";
    case LIBMC_ERROR_CHUNKTIMESTREAMNOTCONTINUOUS: return "Chunk time stream not continuous";
    case LIBMC_ERROR_JOURNALVARIABLENOTFOUND: return "Journal Variable not found";
    case LIBMC_ERROR_INVALIDJOURNALSTREAMQUERY: return "Invalid journal stream query";
    case LIBMC_ERROR_INVALIDJOURNALCOMPUTEDATA: return "Invalid journal compute data";
    case LIBMC_ERROR_INVALIDJOURNALCOMPUTEINTERVAL: return "Invalid journal compute interval";
    case LIBMC_ERROR_DATASERIESNOTFOUND: return "Data series not found";
    case LIBMC_ERROR_DATASERIESISEMPTY: return "Data series is empty";
    case LIBMC_ERROR_EMPTYALERTIDENTIFIER: return "Empty alert identifier";
    case LIBMC_ERROR_INVALIDALERTIDENTIFIER: return "Invalid alert identifier";
    case LIBMC_ERROR_ALERTDEFINITIONNOTFOUND: return "Alert definition not found";
    case LIBMC_ERROR_DUPLICATEALERTIDENTIFIER: return "Duplicate alert identifier";
    case LIBMC_ERROR_EMPTYLANGUAGEIDENTIFIER: return "Empty language identifier";
    case LIBMC_ERROR_EMPTYLANGUAGESTRINGIDENTIFIER: return "Empty language string identifier";
    case LIBMC_ERROR_INVALIDLANGUAGEIDENTIFIER: return "Invalid language identifier";
    case LIBMC_ERROR_INVALIDLANGUAGESTRINGIDENTIFIER: return "Invalid language string identifier";
    case LIBMC_ERROR_INVALIDLANGUAGEDEFINITION: return "Invalid language definition";
    default: return "unknown error";
  }
}

/*************************************************************************************************************************
 Declaration of handle classes 
**************************************************************************************************************************/

typedef LibMCHandle LibMC_Base;
typedef LibMCHandle LibMC_APIRequestHandler;
typedef LibMCHandle LibMC_MCContext;

namespace LibMC {

  /*************************************************************************************************************************
   Declaration of enums
  **************************************************************************************************************************/
  
  enum class eLogLevel : LibMC_int32 {
    UserAcknowledge = 1,
    FatalError = 2,
    CriticalError = 3,
    Warning = 4,
    Message = 5,
    Info = 6,
    Debug = 7,
    Unknown = 8
  };
  
  enum class eLogSubSystem : LibMC_int32 {
    System = 1,
    Network = 2,
    Testing = 3
  };
  
} // namespace LibMC;

// define legacy C-names for enums, structs and function types
typedef LibMC::eLogLevel eLibMCLogLevel;
typedef LibMC::eLogSubSystem eLibMCLogSubSystem;

#endif // __LIBMC_TYPES_HEADER_CPP
