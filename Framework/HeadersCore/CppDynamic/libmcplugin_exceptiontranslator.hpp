/*++

Copyright (C) 2020 Autodesk Inc.

All rights reserved.

This file has been generated by the Automatic Component Toolkit (ACT) version 1.7.0-develop.

Abstract: This is an autogenerated C++-Header file in order to allow an easy
 use of MC Plugin Interface

Interface version: 1.0.0

*/

#ifndef __LIBMCPLUGIN_CPPHEADER_EXCEPTIONTRANSLATOR_CPP
#define __LIBMCPLUGIN_CPPHEADER_EXCEPTIONTRANSLATOR_CPP

#include "libmcplugin_dynamic.hpp"

namespace LibMCPlugin {

	template <class ExceptionType, class ErrorType, int InvalidParamError> class ETranslator_StateFactory {
	private:
		CStateFactory* m_pParent;
		ErrorType m_nErrorCode;
	public:
		ETranslator_StateFactory(CStateFactory* pParent, ErrorType nErrorCode)
			: m_pParent(pParent), m_nErrorCode(nErrorCode)
		{
			if (pParent == nullptr)
				throw ExceptionType(InvalidParamError);
		}

		ETranslator_StateFactory(PStateFactory pParent, ErrorType nErrorCode)
			: m_pParent(pParent.get()), m_nErrorCode(nErrorCode)
		{
			if (pParent.get() == nullptr)
				throw ExceptionType(InvalidParamError);
		}

		inline LibMCPlugin::PState CreateState(const std::string& sStateName)
		{
			try {
				return m_pParent->CreateState(sStateName);
			}
			catch (std::exception & E) {
				throw ExceptionType(m_nErrorCode, E.what());
			}
		}
	};


};



#endif // __LIBMCPLUGIN_CPPHEADER_EXCEPTIONTRANSLATOR_CPP