/*++

Copyright (C) 2023 Autodesk Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of the Autodesk Inc. nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS' AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL AUTODESK INC. BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


This file has been generated by the Automatic Component Toolkit (ACT) version 1.8.0-develop.

Abstract: This is an autogenerated C++-Header file in order to allow an easy
 use of GRPC Library Wrapper

Interface version: 1.2.0

*/

#ifndef __LIBGRPCWRAPPER_DYNAMICHEADER_CPPTYPES
#define __LIBGRPCWRAPPER_DYNAMICHEADER_CPPTYPES

#include "libgrpcwrapper_types.hpp"



/*************************************************************************************************************************
 Class definition for Base
**************************************************************************************************************************/

/*************************************************************************************************************************
 Class definition for Message
**************************************************************************************************************************/

/**
* Returns if the message has a field of a certain name.
*
* @param[in] pMessage - Message instance.
* @param[in] pFieldName - Name of the field.
* @param[out] pFieldExists - True if field exists.
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperMessage_HasFieldPtr) (LibGRPCWrapper_Message pMessage, const char * pFieldName, bool * pFieldExists);

/**
* Returns if the message has a field of a certain name and this field is a string field.
*
* @param[in] pMessage - Message instance.
* @param[in] pFieldName - Name of the field.
* @param[out] pStringFieldExists - True if field exists and is of type string.
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperMessage_HasStringFieldPtr) (LibGRPCWrapper_Message pMessage, const char * pFieldName, bool * pStringFieldExists);

/**
* Sets a string field of the message. Fails if the field does not exist or is not a string field.
*
* @param[in] pMessage - Message instance.
* @param[in] pFieldName - Name of the field.
* @param[in] pValue - New value of the field.
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperMessage_SetStringFieldPtr) (LibGRPCWrapper_Message pMessage, const char * pFieldName, const char * pValue);

/**
* Gets a string field of the message. Fails if the field does not exist or is not a string field.
*
* @param[in] pMessage - Message instance.
* @param[in] pFieldName - Name of the field.
* @param[in] nValueBufferSize - size of the buffer (including trailing 0)
* @param[out] pValueNeededChars - will be filled with the count of the written bytes, or needed buffer size.
* @param[out] pValueBuffer -  buffer of Current value of the field., may be NULL
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperMessage_GetStringFieldPtr) (LibGRPCWrapper_Message pMessage, const char * pFieldName, const LibGRPCWrapper_uint32 nValueBufferSize, LibGRPCWrapper_uint32* pValueNeededChars, char * pValueBuffer);

/**
* Sets a int32 field of the message. Fails if the field does not exist or is not a int32 field.
*
* @param[in] pMessage - Message instance.
* @param[in] pFieldName - Name of the field.
* @param[in] nValue - New value of the field.
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperMessage_SetInt32FieldPtr) (LibGRPCWrapper_Message pMessage, const char * pFieldName, LibGRPCWrapper_int32 nValue);

/**
* Gets a int32 field of the message. Fails if the field does not exist or is not a int32 field.
*
* @param[in] pMessage - Message instance.
* @param[in] pFieldName - Name of the field.
* @param[out] pValue - Current value of the field.
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperMessage_GetInt32FieldPtr) (LibGRPCWrapper_Message pMessage, const char * pFieldName, LibGRPCWrapper_int32 * pValue);

/**
* Sets a uint32 field of the message. Fails if the field does not exist or is not a uint32 field.
*
* @param[in] pMessage - Message instance.
* @param[in] pFieldName - Name of the field.
* @param[in] nValue - New value of the field.
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperMessage_SetUInt32FieldPtr) (LibGRPCWrapper_Message pMessage, const char * pFieldName, LibGRPCWrapper_uint32 nValue);

/**
* Gets a uint32 field of the message. Fails if the field does not exist or is not a uint32 field.
*
* @param[in] pMessage - Message instance.
* @param[in] pFieldName - Name of the field.
* @param[out] pValue - Current value of the field.
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperMessage_GetUInt32FieldPtr) (LibGRPCWrapper_Message pMessage, const char * pFieldName, LibGRPCWrapper_uint32 * pValue);

/**
* Sets a int64 field of the message. Fails if the field does not exist or is not a int64 field.
*
* @param[in] pMessage - Message instance.
* @param[in] pFieldName - Name of the field.
* @param[in] nValue - New value of the field.
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperMessage_SetInt64FieldPtr) (LibGRPCWrapper_Message pMessage, const char * pFieldName, LibGRPCWrapper_int64 nValue);

/**
* Gets a int64 field of the message. Fails if the field does not exist or is not a int64 field.
*
* @param[in] pMessage - Message instance.
* @param[in] pFieldName - Name of the field.
* @param[out] pValue - Current value of the field.
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperMessage_GetInt64FieldPtr) (LibGRPCWrapper_Message pMessage, const char * pFieldName, LibGRPCWrapper_int64 * pValue);

/**
* Sets a uint64 field of the message. Fails if the field does not exist or is not a uint64 field.
*
* @param[in] pMessage - Message instance.
* @param[in] pFieldName - Name of the field.
* @param[in] nValue - New value of the field.
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperMessage_SetUInt64FieldPtr) (LibGRPCWrapper_Message pMessage, const char * pFieldName, LibGRPCWrapper_uint64 nValue);

/**
* Gets a uint64 field of the message. Fails if the field does not exist or is not a uint64 field.
*
* @param[in] pMessage - Message instance.
* @param[in] pFieldName - Name of the field.
* @param[out] pValue - Current value of the field.
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperMessage_GetUInt64FieldPtr) (LibGRPCWrapper_Message pMessage, const char * pFieldName, LibGRPCWrapper_uint64 * pValue);

/**
* Sets a bool field of the message. Fails if the field does not exist or is not a bool field.
*
* @param[in] pMessage - Message instance.
* @param[in] pFieldName - Name of the field.
* @param[in] bValue - New value of the field.
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperMessage_SetBoolFieldPtr) (LibGRPCWrapper_Message pMessage, const char * pFieldName, bool bValue);

/**
* Gets a bool field of the message. Fails if the field does not exist or is not a bool field.
*
* @param[in] pMessage - Message instance.
* @param[in] pFieldName - Name of the field.
* @param[out] pValue - Current value of the field.
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperMessage_GetBoolFieldPtr) (LibGRPCWrapper_Message pMessage, const char * pFieldName, bool * pValue);

/**
* Sets a float field of the message. Fails if the field does not exist or is not a float field.
*
* @param[in] pMessage - Message instance.
* @param[in] pFieldName - Name of the field.
* @param[in] fValue - New value of the field.
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperMessage_SetFloatFieldPtr) (LibGRPCWrapper_Message pMessage, const char * pFieldName, LibGRPCWrapper_single fValue);

/**
* Gets a float field of the message. Fails if the field does not exist or is not a float field.
*
* @param[in] pMessage - Message instance.
* @param[in] pFieldName - Name of the field.
* @param[out] pValue - Current value of the field.
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperMessage_GetFloatFieldPtr) (LibGRPCWrapper_Message pMessage, const char * pFieldName, LibGRPCWrapper_single * pValue);

/**
* Sets a double field of the message. Fails if the field does not exist or is not a double field.
*
* @param[in] pMessage - Message instance.
* @param[in] pFieldName - Name of the field.
* @param[in] dValue - New value of the field.
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperMessage_SetDoubleFieldPtr) (LibGRPCWrapper_Message pMessage, const char * pFieldName, LibGRPCWrapper_double dValue);

/**
* Gets a double field of the message. Fails if the field does not exist or is not a double field.
*
* @param[in] pMessage - Message instance.
* @param[in] pFieldName - Name of the field.
* @param[out] pValue - Current value of the field.
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperMessage_GetDoubleFieldPtr) (LibGRPCWrapper_Message pMessage, const char * pFieldName, LibGRPCWrapper_int32 * pValue);

/*************************************************************************************************************************
 Class definition for Response
**************************************************************************************************************************/

/**
* Returns the response type of the connection.
*
* @param[in] pResponse - Response instance.
* @param[in] nResponseTypeBufferSize - size of the buffer (including trailing 0)
* @param[out] pResponseTypeNeededChars - will be filled with the count of the written bytes, or needed buffer size.
* @param[out] pResponseTypeBuffer -  buffer of Message type identifier., may be NULL
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperResponse_GetResponseTypePtr) (LibGRPCWrapper_Response pResponse, const LibGRPCWrapper_uint32 nResponseTypeBufferSize, LibGRPCWrapper_uint32* pResponseTypeNeededChars, char * pResponseTypeBuffer);

/*************************************************************************************************************************
 Class definition for Request
**************************************************************************************************************************/

/**
* Returns the request type of the connection.
*
* @param[in] pRequest - Request instance.
* @param[in] nRequestTypeBufferSize - size of the buffer (including trailing 0)
* @param[out] pRequestTypeNeededChars - will be filled with the count of the written bytes, or needed buffer size.
* @param[out] pRequestTypeBuffer -  buffer of Message type identifier., may be NULL
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperRequest_GetRequestTypePtr) (LibGRPCWrapper_Request pRequest, const LibGRPCWrapper_uint32 nRequestTypeBufferSize, LibGRPCWrapper_uint32* pRequestTypeNeededChars, char * pRequestTypeBuffer);

/**
* Returns the expected response type of the connection.
*
* @param[in] pRequest - Request instance.
* @param[in] nExpectedResponseTypeBufferSize - size of the buffer (including trailing 0)
* @param[out] pExpectedResponseTypeNeededChars - will be filled with the count of the written bytes, or needed buffer size.
* @param[out] pExpectedResponseTypeBuffer -  buffer of Message type identifier., may be NULL
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperRequest_GetExpectedResponseTypePtr) (LibGRPCWrapper_Request pRequest, const LibGRPCWrapper_uint32 nExpectedResponseTypeBufferSize, LibGRPCWrapper_uint32* pExpectedResponseTypeNeededChars, char * pExpectedResponseTypeBuffer);

/**
* Sends the request to the end point and waits for a response.
*
* @param[in] pRequest - Request instance.
* @param[in] pServiceMethod - Service method to call.
* @param[in] nTimeOutInMS - Timeout for the response in MS.
* @param[out] pResponseInstance - Response Instance
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperRequest_SendBlockingPtr) (LibGRPCWrapper_Request pRequest, const char * pServiceMethod, LibGRPCWrapper_uint32 nTimeOutInMS, LibGRPCWrapper_Response * pResponseInstance);

/*************************************************************************************************************************
 Class definition for Connection
**************************************************************************************************************************/

/**
* Returns the end point of the connection.
*
* @param[in] pConnection - Connection instance.
* @param[in] nEndPointBufferSize - size of the buffer (including trailing 0)
* @param[out] pEndPointNeededChars - will be filled with the count of the written bytes, or needed buffer size.
* @param[out] pEndPointBuffer -  buffer of End point of the connection., may be NULL
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperConnection_GetEndPointPtr) (LibGRPCWrapper_Connection pConnection, const LibGRPCWrapper_uint32 nEndPointBufferSize, LibGRPCWrapper_uint32* pEndPointNeededChars, char * pEndPointBuffer);

/**
* Closes the connection. All subsequent calls to the connection will fail.
*
* @param[in] pConnection - Connection instance.
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperConnection_ClosePtr) (LibGRPCWrapper_Connection pConnection);

/**
* Creates a message request to the end point.
*
* @param[in] pConnection - Connection instance.
* @param[in] pRequestTypeIdentifier - Message Type Identifier of the request.
* @param[in] pResponseTypeIdentifier - Message Type Identifier of the expected response.
* @param[out] pRequestInstance - Request Instance
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperConnection_CreateStaticRequestPtr) (LibGRPCWrapper_Connection pConnection, const char * pRequestTypeIdentifier, const char * pResponseTypeIdentifier, LibGRPCWrapper_Request * pRequestInstance);

/*************************************************************************************************************************
 Class definition for Protocol
**************************************************************************************************************************/

/**
* Connects to an end point
*
* @param[in] pProtocol - Protocol instance.
* @param[in] pNetworkCredentials - Host to connect to
* @param[out] pConnectionInstance - Connection Instance
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperProtocol_ConnectUnsecurePtr) (LibGRPCWrapper_Protocol pProtocol, const char * pNetworkCredentials, LibGRPCWrapper_Connection * pConnectionInstance);

/**
* Returns protobuf definition as string.
*
* @param[in] pProtocol - Protocol instance.
* @param[in] nProtobufDefinitionBufferSize - size of the buffer (including trailing 0)
* @param[out] pProtobufDefinitionNeededChars - will be filled with the count of the written bytes, or needed buffer size.
* @param[out] pProtobufDefinitionBuffer -  buffer of Protobuf file as string., may be NULL
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperProtocol_GetProtobufDefinitionPtr) (LibGRPCWrapper_Protocol pProtocol, const LibGRPCWrapper_uint32 nProtobufDefinitionBufferSize, LibGRPCWrapper_uint32* pProtobufDefinitionNeededChars, char * pProtobufDefinitionBuffer);

/**
* Returns if protocol buffer has a certain message type.
*
* @param[in] pProtocol - Protocol instance.
* @param[in] pMessageTypeIdentifier - Message Type Identifier.
* @param[out] pExists - Returns if message type exists.
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperProtocol_HasMessageTypePtr) (LibGRPCWrapper_Protocol pProtocol, const char * pMessageTypeIdentifier, bool * pExists);

/*************************************************************************************************************************
 Global functions
**************************************************************************************************************************/

/**
* retrieves the binary version of this library.
*
* @param[out] pMajor - returns the major version of this library
* @param[out] pMinor - returns the minor version of this library
* @param[out] pMicro - returns the micro version of this library
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperGetVersionPtr) (LibGRPCWrapper_uint32 * pMajor, LibGRPCWrapper_uint32 * pMinor, LibGRPCWrapper_uint32 * pMicro);

/**
* Returns the last error recorded on this object
*
* @param[in] pInstance - Instance Handle
* @param[in] nErrorMessageBufferSize - size of the buffer (including trailing 0)
* @param[out] pErrorMessageNeededChars - will be filled with the count of the written bytes, or needed buffer size.
* @param[out] pErrorMessageBuffer -  buffer of Message of the last error, may be NULL
* @param[out] pHasError - Is there a last error to query
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperGetLastErrorPtr) (LibGRPCWrapper_Base pInstance, const LibGRPCWrapper_uint32 nErrorMessageBufferSize, LibGRPCWrapper_uint32* pErrorMessageNeededChars, char * pErrorMessageBuffer, bool * pHasError);

/**
* Acquire shared ownership of an Instance
*
* @param[in] pInstance - Instance Handle
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperAcquireInstancePtr) (LibGRPCWrapper_Base pInstance);

/**
* Releases shared ownership of an Instance
*
* @param[in] pInstance - Instance Handle
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperReleaseInstancePtr) (LibGRPCWrapper_Base pInstance);

/**
* Returns the address of the SymbolLookupMethod
*
* @param[out] pSymbolLookupMethod - Address of the SymbolAddressMethod
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperGetSymbolLookupMethodPtr) (LibGRPCWrapper_pvoid * pSymbolLookupMethod);

/**
* Returns a PLC instance
*
* @param[in] pProtoBufferDefinition - Protobuf structure definition as string.
* @param[out] pProtocolInstance - Protocol Instance
* @return error code or 0 (success)
*/
typedef LibGRPCWrapperResult (*PLibGRPCWrapperCreateProtocolPtr) (const char * pProtoBufferDefinition, LibGRPCWrapper_Protocol * pProtocolInstance);

/*************************************************************************************************************************
 Function Table Structure
**************************************************************************************************************************/

typedef struct {
	void * m_LibraryHandle;
	PLibGRPCWrapperMessage_HasFieldPtr m_Message_HasField;
	PLibGRPCWrapperMessage_HasStringFieldPtr m_Message_HasStringField;
	PLibGRPCWrapperMessage_SetStringFieldPtr m_Message_SetStringField;
	PLibGRPCWrapperMessage_GetStringFieldPtr m_Message_GetStringField;
	PLibGRPCWrapperMessage_SetInt32FieldPtr m_Message_SetInt32Field;
	PLibGRPCWrapperMessage_GetInt32FieldPtr m_Message_GetInt32Field;
	PLibGRPCWrapperMessage_SetUInt32FieldPtr m_Message_SetUInt32Field;
	PLibGRPCWrapperMessage_GetUInt32FieldPtr m_Message_GetUInt32Field;
	PLibGRPCWrapperMessage_SetInt64FieldPtr m_Message_SetInt64Field;
	PLibGRPCWrapperMessage_GetInt64FieldPtr m_Message_GetInt64Field;
	PLibGRPCWrapperMessage_SetUInt64FieldPtr m_Message_SetUInt64Field;
	PLibGRPCWrapperMessage_GetUInt64FieldPtr m_Message_GetUInt64Field;
	PLibGRPCWrapperMessage_SetBoolFieldPtr m_Message_SetBoolField;
	PLibGRPCWrapperMessage_GetBoolFieldPtr m_Message_GetBoolField;
	PLibGRPCWrapperMessage_SetFloatFieldPtr m_Message_SetFloatField;
	PLibGRPCWrapperMessage_GetFloatFieldPtr m_Message_GetFloatField;
	PLibGRPCWrapperMessage_SetDoubleFieldPtr m_Message_SetDoubleField;
	PLibGRPCWrapperMessage_GetDoubleFieldPtr m_Message_GetDoubleField;
	PLibGRPCWrapperResponse_GetResponseTypePtr m_Response_GetResponseType;
	PLibGRPCWrapperRequest_GetRequestTypePtr m_Request_GetRequestType;
	PLibGRPCWrapperRequest_GetExpectedResponseTypePtr m_Request_GetExpectedResponseType;
	PLibGRPCWrapperRequest_SendBlockingPtr m_Request_SendBlocking;
	PLibGRPCWrapperConnection_GetEndPointPtr m_Connection_GetEndPoint;
	PLibGRPCWrapperConnection_ClosePtr m_Connection_Close;
	PLibGRPCWrapperConnection_CreateStaticRequestPtr m_Connection_CreateStaticRequest;
	PLibGRPCWrapperProtocol_ConnectUnsecurePtr m_Protocol_ConnectUnsecure;
	PLibGRPCWrapperProtocol_GetProtobufDefinitionPtr m_Protocol_GetProtobufDefinition;
	PLibGRPCWrapperProtocol_HasMessageTypePtr m_Protocol_HasMessageType;
	PLibGRPCWrapperGetVersionPtr m_GetVersion;
	PLibGRPCWrapperGetLastErrorPtr m_GetLastError;
	PLibGRPCWrapperAcquireInstancePtr m_AcquireInstance;
	PLibGRPCWrapperReleaseInstancePtr m_ReleaseInstance;
	PLibGRPCWrapperGetSymbolLookupMethodPtr m_GetSymbolLookupMethod;
	PLibGRPCWrapperCreateProtocolPtr m_CreateProtocol;
} sLibGRPCWrapperDynamicWrapperTable;

#endif // __LIBGRPCWRAPPER_DYNAMICHEADER_CPPTYPES

