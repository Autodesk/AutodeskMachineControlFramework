#[[++

Copyright (C) 2020 Autodesk Inc.

All rights reserved.

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

]]

cmake_minimum_required(VERSION 3.5)

set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "")

file(STRINGS ${CMAKE_CURRENT_BINARY_DIR}/githash.txt GLOBALGITHASH)
message(STATUS "Global git hash: \"${GLOBALGITHASH}\"")

add_subdirectory(Plugins)	

add_custom_target(configuration_xml ALL DEPENDS ${CMAKE_SOURCE_DIR}/Plugins/config.xml)

set_property(TARGET configuration_xml APPEND PROPERTY SOURCES ${CMAKE_SOURCE_DIR}/Plugins/config.xml)

message("system processor ${CMAKE_SYSTEM_PROCESSOR}")

add_custom_command(
	TARGET configuration_xml PRE_BUILD
	COMMAND ${CMAKE_COMMAND} -E echo "creating output directory")

add_custom_command(
	TARGET configuration_xml PRE_BUILD
	COMMAND ${CMAKE_COMMAND} -E make_directory			
			${CMAKE_CURRENT_BINARY_DIR}/Output)

add_custom_command(
	TARGET configuration_xml PRE_BUILD
	COMMAND ${CMAKE_COMMAND} -E echo "copying config.xml...")

add_custom_command(
    TARGET configuration_xml PRE_BUILD
	COMMAND ${CMAKE_COMMAND} -E copy
            ${CMAKE_SOURCE_DIR}/Plugins/config.xml
			${CMAKE_CURRENT_BINARY_DIR}/Output/${GLOBALGITHASH}_config.xml)


add_custom_target(copy_distribution ALL)

add_custom_command(
	TARGET copy_distribution PRE_BUILD
	COMMAND ${CMAKE_COMMAND} -E echo "creating output directory")

add_custom_command(
	TARGET copy_distribution PRE_BUILD
	COMMAND ${CMAKE_COMMAND} -E make_directory			
			${CMAKE_CURRENT_BINARY_DIR}/Output)


file (GLOB distfiles LIST_DIRECTORIES false "${CMAKE_CURRENT_BINARY_DIR}/Framework/Dist/*")
foreach(distfile ${distfiles})

	get_filename_component(distfilename ${distfile} NAME)
	
	add_custom_command(
        TARGET copy_distribution PRE_BUILD
        COMMAND ${CMAKE_COMMAND} -E echo "copying ${distfilename}...")

	add_custom_command(
        TARGET copy_distribution PRE_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy
                ${CMAKE_CURRENT_BINARY_DIR}/Framework/Dist/${distfilename}
                ${CMAKE_CURRENT_BINARY_DIR}/Output/${distfilename})
				
				
endforeach()				

	
add_custom_command(
	TARGET copy_distribution PRE_BUILD
	COMMAND ${CMAKE_COMMAND} -E echo "creating data directory")

add_custom_command(
	TARGET copy_distribution PRE_BUILD
	COMMAND ${CMAKE_COMMAND} -E make_directory			
			${CMAKE_CURRENT_BINARY_DIR}/Output/data)
			
			
add_custom_target(create_core_resources ALL)
add_custom_command(
	TARGET create_core_resources POST_BUILD
	COMMAND ${CMAKE_COMMAND} -E echo "creating core resources")

if(WIN32)
add_custom_command(
	TARGET create_core_resources POST_BUILD
	COMMAND ${CMAKE_CURRENT_BINARY_DIR}/Framework/buildresources.exe
			${CMAKE_CURRENT_SOURCE_DIR}/Plugins/Resources/
			${CMAKE_CURRENT_BINARY_DIR}/Output/${GLOBALGITHASH}_core.data)
else()

	if (CMAKE_SYSTEM_PROCESSOR MATCHES ".*arm.*")
		message("arm detected")
		add_custom_command(
			TARGET create_core_resources POST_BUILD
				COMMAND ${CMAKE_CURRENT_BINARY_DIR}/Framework/buildresources.arm
						${CMAKE_CURRENT_SOURCE_DIR}/Plugins/Resources/
						${CMAKE_CURRENT_BINARY_DIR}/Output/${GLOBALGITHASH}_core.data)
					
	else()
		add_custom_command(
			TARGET create_core_resources POST_BUILD
				COMMAND ${CMAKE_CURRENT_BINARY_DIR}/Framework/buildresources.linux64
						${CMAKE_CURRENT_SOURCE_DIR}/Plugins/Resources/
						${CMAKE_CURRENT_BINARY_DIR}/Output/${GLOBALGITHASH}_core.data)
					
	endif()

endif()
